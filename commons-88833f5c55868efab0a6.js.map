{"version":3,"file":"commons-88833f5c55868efab0a6.js","mappings":";4FAGiEA,EAAOC,QAGhE,WAAc,aAEpB,SAASC,EAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,IAAIG,EAAI,EAAGC,EAAOH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAAOC,EAAKD,GAAKH,EAAIG,GAAM,OAAOC,CAAM,CAAS,OAAOH,MAAMK,KAAKN,EAAQ,CAElM,IAAIO,EAAiBC,OAAOD,eACxBE,EAAiBD,OAAOC,eACxBC,EAAWF,OAAOE,SAClBC,EAASH,OAAOG,OAChBC,EAAOJ,OAAOI,KACdC,EAASL,OAAOK,OAEhBC,EAA0B,oBAAZC,SAA2BA,QACzCC,EAAQF,EAAKE,MACbC,EAAYH,EAAKG,UAEhBD,IACHA,EAAQ,SAAeE,EAAKC,EAAWC,GACrC,OAAOF,EAAIF,MAAMG,EAAWC,EAC9B,GAGGT,IACHA,EAAS,SAAgBU,GACvB,OAAOA,CACT,GAGGT,IACHA,EAAO,SAAcS,GACnB,OAAOA,CACT,GAGGJ,IACHA,EAAY,SAAmBK,EAAMF,GACnC,OAAO,IAAKG,SAASC,UAAUC,KAAKT,MAAMM,EAAM,CAAC,MAAMI,OAAO3B,EAAmBqB,KACnF,GAGF,IAAIO,EAAeC,EAAQ3B,MAAMuB,UAAUK,SACvCC,EAAWF,EAAQ3B,MAAMuB,UAAUO,KACnCC,EAAYJ,EAAQ3B,MAAMuB,UAAUS,MAEpCC,EAAoBN,EAAQO,OAAOX,UAAUY,aAC7CC,EAAcT,EAAQO,OAAOX,UAAUc,OACvCC,EAAgBX,EAAQO,OAAOX,UAAUgB,SACzCC,EAAgBb,EAAQO,OAAOX,UAAUkB,SACzCC,EAAaf,EAAQO,OAAOX,UAAUoB,MAEtCC,EAAajB,EAAQkB,OAAOtB,UAAUuB,MAEtCC,EAAkBC,EAAYC,WAElC,SAAStB,EAAQuB,GACf,OAAO,SAAUC,GACf,IAAK,IAAIC,EAAOC,UAAUjD,OAAQe,EAAOnB,MAAMoD,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAC9FnC,EAAKmC,EAAO,GAAKD,UAAUC,GAG7B,OAAOvC,EAAMmC,EAAMC,EAAShC,EAC9B,CACF,CAEA,SAAS6B,EAAYE,GACnB,OAAO,WACL,IAAK,IAAIK,EAAQF,UAAUjD,OAAQe,EAAOnB,MAAMuD,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IAChFrC,EAAKqC,GAASH,UAAUG,GAG1B,OAAOxC,EAAUkC,EAAM/B,EACzB,CACF,CAGA,SAASsC,EAASC,EAAKC,GACjBnD,GAIFA,EAAekD,EAAK,MAItB,IADA,IAAIE,EAAID,EAAMvD,OACPwD,KAAK,CACV,IAAIC,EAAUF,EAAMC,GACpB,GAAuB,iBAAZC,EAAsB,CAC/B,IAAIC,EAAY7B,EAAkB4B,GAC9BC,IAAcD,IAEXpD,EAASkD,KACZA,EAAMC,GAAKE,GAGbD,EAAUC,EAEd,CAEAJ,EAAIG,IAAW,CACjB,CAEA,OAAOH,CACT,CAGA,SAASK,EAAMC,GACb,IAAIC,EAAYrD,EAAO,MAEnBsD,OAAW,EACf,IAAKA,KAAYF,EACXjD,EAAMT,EAAgB0D,EAAQ,CAACE,MACjCD,EAAUC,GAAYF,EAAOE,IAIjC,OAAOD,CACT,CAEA,IAAIE,EAAOzD,EAAO,CAAC,IAAK,OAAQ,UAAW,UAAW,OAAQ,UAAW,QAAS,QAAS,IAAK,MAAO,MAAO,MAAO,QAAS,aAAc,OAAQ,KAAM,SAAU,SAAU,UAAW,SAAU,OAAQ,OAAQ,MAAO,WAAY,UAAW,OAAQ,WAAY,KAAM,YAAa,MAAO,UAAW,MAAO,SAAU,MAAO,MAAO,KAAM,KAAM,UAAW,KAAM,WAAY,aAAc,SAAU,OAAQ,SAAU,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,SAAU,SAAU,KAAM,OAAQ,IAAK,MAAO,QAAS,MAAO,MAAO,QAAS,SAAU,KAAM,OAAQ,MAAO,OAAQ,UAAW,OAAQ,WAAY,QAAS,MAAO,OAAQ,KAAM,WAAY,SAAU,SAAU,IAAK,UAAW,MAAO,WAAY,IAAK,KAAM,KAAM,OAAQ,IAAK,OAAQ,UAAW,SAAU,SAAU,QAAS,SAAU,SAAU,OAAQ,SAAU,SAAU,QAAS,MAAO,UAAW,MAAO,QAAS,QAAS,KAAM,WAAY,WAAY,QAAS,KAAM,QAAS,OAAQ,KAAM,QAAS,KAAM,IAAK,KAAM,MAAO,QAAS,QAGj+B0D,EAAM1D,EAAO,CAAC,MAAO,IAAK,WAAY,cAAe,eAAgB,eAAgB,gBAAiB,mBAAoB,QAAS,SAAU,SAAU,WAAY,OAAQ,OAAQ,UAAW,SAAU,OAAQ,IAAK,QAAS,WAAY,QAAS,QAAS,OAAQ,iBAAkB,SAAU,OAAQ,WAAY,QAAS,OAAQ,UAAW,UAAW,WAAY,iBAAkB,OAAQ,OAAQ,QAAS,SAAU,SAAU,OAAQ,WAAY,QAAS,OAAQ,QAAS,QAAS,OAAQ,UAEre2D,EAAa3D,EAAO,CAAC,UAAW,gBAAiB,sBAAuB,cAAe,mBAAoB,oBAAqB,oBAAqB,iBAAkB,UAAW,UAAW,UAAW,UAAW,UAAW,iBAAkB,UAAW,cAAe,eAAgB,WAAY,eAAgB,qBAAsB,cAAe,SAAU,iBAErW4D,EAAS5D,EAAO,CAAC,OAAQ,WAAY,SAAU,UAAW,QAAS,SAAU,KAAM,aAAc,gBAAiB,KAAM,KAAM,QAAS,UAAW,WAAY,QAAS,OAAQ,KAAM,SAAU,QAAS,SAAU,OAAQ,OAAQ,UAAW,SAAU,MAAO,QAAS,MAAO,SAAU,eAExR6D,EAAO7D,EAAO,CAAC,UAEf8D,EAAS9D,EAAO,CAAC,SAAU,SAAU,QAAS,MAAO,iBAAkB,eAAgB,uBAAwB,WAAY,aAAc,UAAW,SAAU,UAAW,cAAe,cAAe,UAAW,OAAQ,QAAS,QAAS,QAAS,OAAQ,UAAW,WAAY,eAAgB,SAAU,cAAe,WAAY,WAAY,UAAW,MAAO,WAAY,0BAA2B,wBAAyB,WAAY,YAAa,UAAW,eAAgB,OAAQ,MAAO,UAAW,SAAU,SAAU,OAAQ,OAAQ,WAAY,KAAM,YAAa,YAAa,QAAS,OAAQ,QAAS,OAAQ,OAAQ,UAAW,OAAQ,MAAO,MAAO,YAAa,QAAS,SAAU,MAAO,YAAa,WAAY,QAAS,OAAQ,UAAW,aAAc,SAAU,OAAQ,UAAW,UAAW,cAAe,cAAe,SAAU,UAAW,UAAW,aAAc,WAAY,MAAO,WAAY,MAAO,WAAY,OAAQ,OAAQ,UAAW,aAAc,QAAS,WAAY,QAAS,OAAQ,QAAS,OAAQ,UAAW,QAAS,MAAO,SAAU,OAAQ,QAAS,UAAW,WAAY,QAAS,YAAa,OAAQ,SAAU,SAAU,QAAS,QAAS,UAEjpC+D,EAAQ/D,EAAO,CAAC,gBAAiB,aAAc,WAAY,qBAAsB,SAAU,gBAAiB,gBAAiB,UAAW,gBAAiB,iBAAkB,QAAS,OAAQ,KAAM,QAAS,OAAQ,gBAAiB,YAAa,YAAa,QAAS,sBAAuB,8BAA+B,gBAAiB,kBAAmB,KAAM,KAAM,IAAK,KAAM,KAAM,kBAAmB,YAAa,UAAW,UAAW,MAAO,WAAY,YAAa,MAAO,OAAQ,eAAgB,YAAa,SAAU,cAAe,cAAe,gBAAiB,cAAe,YAAa,mBAAoB,eAAgB,aAAc,eAAgB,cAAe,KAAM,KAAM,KAAM,KAAM,aAAc,WAAY,gBAAiB,oBAAqB,SAAU,OAAQ,KAAM,kBAAmB,KAAM,MAAO,IAAK,KAAM,KAAM,KAAM,KAAM,UAAW,YAAa,aAAc,WAAY,OAAQ,eAAgB,iBAAkB,eAAgB,mBAAoB,iBAAkB,QAAS,aAAc,aAAc,eAAgB,eAAgB,cAAe,cAAe,mBAAoB,YAAa,MAAO,OAAQ,QAAS,SAAU,OAAQ,MAAO,OAAQ,aAAc,SAAU,WAAY,UAAW,QAAS,SAAU,cAAe,SAAU,WAAY,cAAe,OAAQ,aAAc,sBAAuB,mBAAoB,eAAgB,SAAU,gBAAiB,sBAAuB,iBAAkB,IAAK,KAAM,KAAM,SAAU,OAAQ,OAAQ,cAAe,YAAa,UAAW,SAAU,SAAU,QAAS,OAAQ,kBAAmB,mBAAoB,mBAAoB,eAAgB,cAAe,eAAgB,cAAe,aAAc,eAAgB,mBAAoB,oBAAqB,iBAAkB,kBAAmB,oBAAqB,iBAAkB,SAAU,eAAgB,QAAS,eAAgB,iBAAkB,WAAY,UAAW,UAAW,YAAa,cAAe,kBAAmB,iBAAkB,aAAc,OAAQ,KAAM,KAAM,UAAW,SAAU,UAAW,aAAc,UAAW,aAAc,gBAAiB,gBAAiB,QAAS,eAAgB,OAAQ,eAAgB,mBAAoB,mBAAoB,IAAK,KAAM,KAAM,QAAS,IAAK,KAAM,KAAM,IAAK,eAE5uEgE,EAAWhE,EAAO,CAAC,SAAU,cAAe,QAAS,WAAY,QAAS,eAAgB,cAAe,aAAc,aAAc,QAAS,MAAO,UAAW,eAAgB,WAAY,QAAS,QAAS,SAAU,OAAQ,KAAM,UAAW,SAAU,gBAAiB,SAAU,SAAU,iBAAkB,YAAa,WAAY,cAAe,UAAW,UAAW,gBAAiB,WAAY,WAAY,OAAQ,WAAY,WAAY,aAAc,UAAW,SAAU,SAAU,cAAe,gBAAiB,uBAAwB,YAAa,YAAa,aAAc,WAAY,iBAAkB,iBAAkB,YAAa,UAAW,QAAS,UAEvpBiE,EAAMjE,EAAO,CAAC,aAAc,SAAU,cAAe,YAAa,gBAGlEkE,EAAgBjE,EAAK,6BACrBkE,EAAWlE,EAAK,yBAChBmE,EAAYnE,EAAK,8BACjBoE,EAAYpE,EAAK,kBACjBqE,EAAiBrE,EAAK,yFAEtBsE,EAAoBtE,EAAK,yBACzBuE,EAAkBvE,EAAK,+DAGvBwE,EAA4B,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAwB,SAAUC,GAAO,cAAcA,CAAK,EAAI,SAAUA,GAAO,OAAOA,GAAyB,mBAAXF,QAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAO7D,UAAY,gBAAkB+D,CAAK,EAE3Q,SAASE,EAAqBzF,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,IAAIG,EAAI,EAAGC,EAAOH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAAOC,EAAKD,GAAKH,EAAIG,GAAM,OAAOC,CAAM,CAAS,OAAOH,MAAMK,KAAKN,EAAQ,CAEpM,IAAI0F,EAAY,WACd,MAAyB,oBAAXC,OAAyB,KAAOA,MAChD,EAUIC,EAA4B,SAAmCC,EAAcC,GAC/E,GAAoF,iBAAvD,IAAjBD,EAA+B,YAAcT,EAAQS,KAAoE,mBAA9BA,EAAaE,aAClH,OAAO,KAMT,IAAIC,EAAS,KACTC,EAAY,wBACZH,EAASI,eAAiBJ,EAASI,cAAcC,aAAaF,KAChED,EAASF,EAASI,cAAcE,aAAaH,IAG/C,IAAII,EAAa,aAAeL,EAAS,IAAMA,EAAS,IAExD,IACE,OAAOH,EAAaE,aAAaM,EAAY,CAC3CC,WAAY,SAAoBC,GAC9B,OAAOA,CACT,GAEJ,CAAE,MAAOC,GAKP,OADAC,QAAQC,KAAK,uBAAyBL,EAAa,0BAC5C,IACT,CACF,EAEA,SAASM,IACP,IAAIhB,EAASrC,UAAUjD,OAAS,QAAsBuG,IAAjBtD,UAAU,GAAmBA,UAAU,GAAKoC,IAE7EmB,EAAY,SAAmBC,GACjC,OAAOH,EAAgBG,EACzB,EAcA,GARAD,EAAUE,QAAU,QAMpBF,EAAUG,QAAU,IAEfrB,IAAWA,EAAOG,UAAyC,IAA7BH,EAAOG,SAASmB,SAKjD,OAFAJ,EAAUK,aAAc,EAEjBL,EAGT,IAAIM,EAAmBxB,EAAOG,SAE1BA,EAAWH,EAAOG,SAClBsB,EAAmBzB,EAAOyB,iBAC1BC,EAAsB1B,EAAO0B,oBAC7BC,EAAO3B,EAAO2B,KACdC,EAAa5B,EAAO4B,WACpBC,EAAuB7B,EAAO8B,aAC9BA,OAAwCb,IAAzBY,EAAqC7B,EAAO8B,cAAgB9B,EAAO+B,gBAAkBF,EACpGG,EAAOhC,EAAOgC,KACdC,EAAUjC,EAAOiC,QACjBC,EAAYlC,EAAOkC,UACnBhC,EAAeF,EAAOE,aAS1B,GAAmC,mBAAxBwB,EAAoC,CAC7C,IAAIS,EAAWhC,EAASiC,cAAc,YAClCD,EAASE,SAAWF,EAASE,QAAQC,gBACvCnC,EAAWgC,EAASE,QAAQC,cAEhC,CAEA,IAAIC,EAAqBtC,EAA0BC,EAAcsB,GAC7DgB,EAAYD,GAAsBE,GAAsBF,EAAmB5B,WAAW,IAAM,GAE5F+B,EAAYvC,EACZwC,EAAiBD,EAAUC,eAC3BC,EAAqBF,EAAUE,mBAC/BC,GAAuBH,EAAUG,qBACjCC,GAAyBJ,EAAUI,uBACnCC,GAAavB,EAAiBuB,WAG9BC,GAAe,CAAC,EACpB,IACEA,GAAe3E,EAAM8B,GAAU6C,aAAe7C,EAAS6C,aAAe,CAAC,CACzE,CAAE,MAAOnC,IAAI,CAEb,IAAIoC,GAAQ,CAAC,EAKb/B,EAAUK,YAAcoB,QAA+D,IAAtCA,EAAeO,oBAAuD,IAAjBF,GAEtG,IAAIG,GAAmBjE,EACnBkE,GAAcjE,EACdkE,GAAejE,EACfkE,GAAejE,EACfkE,GAAuBhE,EACvBiE,GAAqBhE,EACrBiE,GAAoBnE,EASpBoE,GAAe,KACfC,GAAuB5F,EAAS,CAAC,EAAG,GAAGhC,OAAO+D,EAAqBrB,GAAOqB,EAAqBpB,GAAMoB,EAAqBnB,GAAamB,EAAqBlB,GAASkB,EAAqBjB,KAG1L+E,GAAe,KACfC,GAAuB9F,EAAS,CAAC,EAAG,GAAGhC,OAAO+D,EAAqBhB,GAASgB,EAAqBf,GAAQe,EAAqBd,GAAWc,EAAqBb,KAG9J6E,GAAc,KAGdC,GAAc,KAGdC,IAAkB,EAGlBC,IAAkB,EAGlBC,IAA0B,EAK1BC,IAAqB,EAGrBC,IAAiB,EAGjBC,IAAa,EAIbC,IAAa,EAMbC,IAAa,EAIbC,IAAsB,EAWtBC,IAAoB,EAIpBhC,IAAsB,EAGtBiC,IAAe,EAGfC,IAAe,EAIfC,IAAW,EAGXC,GAAe,CAAC,EAGhBC,GAAkB/G,EAAS,CAAC,EAAG,CAAC,iBAAkB,QAAS,WAAY,OAAQ,gBAAiB,OAAQ,SAAU,OAAQ,KAAM,KAAM,KAAM,KAAM,QAAS,UAAW,WAAY,YAAa,SAAU,QAAS,MAAO,WAAY,QAAS,QAAS,QAAS,QAGhQgH,GAAgB,KAChBC,GAAwBjH,EAAS,CAAC,EAAG,CAAC,QAAS,QAAS,MAAO,SAAU,QAAS,UAGlFkH,GAAsB,KACtBC,GAA8BnH,EAAS,CAAC,EAAG,CAAC,MAAO,QAAS,MAAO,KAAM,QAAS,OAAQ,UAAW,cAAe,UAAW,QAAS,QAAS,QAAS,UAG1JoH,GAAS,KAKTC,GAAcjF,EAASiC,cAAc,QAQrCiD,GAAe,SAAsBC,GACnCH,IAAUA,KAAWG,IAKpBA,GAAqE,iBAA9C,IAARA,EAAsB,YAAc7F,EAAQ6F,MAC9DA,EAAM,CAAC,GAITA,EAAMjH,EAAMiH,GAGZ5B,GAAe,iBAAkB4B,EAAMvH,EAAS,CAAC,EAAGuH,EAAI5B,cAAgBC,GACxEC,GAAe,iBAAkB0B,EAAMvH,EAAS,CAAC,EAAGuH,EAAI1B,cAAgBC,GACxEoB,GAAsB,sBAAuBK,EAAMvH,EAASM,EAAM6G,IAA8BI,EAAIC,mBAAqBL,GACzHH,GAAgB,sBAAuBO,EAAMvH,EAASM,EAAM2G,IAAwBM,EAAIE,mBAAqBR,GAC7GlB,GAAc,gBAAiBwB,EAAMvH,EAAS,CAAC,EAAGuH,EAAIxB,aAAe,CAAC,EACtEC,GAAc,gBAAiBuB,EAAMvH,EAAS,CAAC,EAAGuH,EAAIvB,aAAe,CAAC,EACtEc,GAAe,iBAAkBS,GAAMA,EAAIT,aAC3Cb,IAA0C,IAAxBsB,EAAItB,gBACtBC,IAA0C,IAAxBqB,EAAIrB,gBACtBC,GAA0BoB,EAAIpB,0BAA2B,EACzDC,GAAqBmB,EAAInB,qBAAsB,EAC/CC,GAAiBkB,EAAIlB,iBAAkB,EACvCG,GAAae,EAAIf,aAAc,EAC/BC,GAAsBc,EAAId,sBAAuB,EACjDC,IAA8C,IAA1Ba,EAAIb,kBACxBhC,GAAsB6C,EAAI7C,sBAAuB,EACjD6B,GAAagB,EAAIhB,aAAc,EAC/BI,IAAoC,IAArBY,EAAIZ,aACnBC,IAAoC,IAArBW,EAAIX,aACnBC,GAAWU,EAAIV,WAAY,EAC3BnB,GAAoB6B,EAAIG,oBAAsBhC,GAC1CU,KACFF,IAAkB,GAGhBO,KACFD,IAAa,GAIXM,KACFnB,GAAe3F,EAAS,CAAC,EAAG,GAAGhC,OAAO+D,EAAqBjB,KAC3D+E,GAAe,IACW,IAAtBiB,GAAapG,OACfV,EAAS2F,GAAcjF,GACvBV,EAAS6F,GAAc9E,KAGA,IAArB+F,GAAanG,MACfX,EAAS2F,GAAchF,GACvBX,EAAS6F,GAAc7E,GACvBhB,EAAS6F,GAAc3E,KAGO,IAA5B4F,GAAalG,aACfZ,EAAS2F,GAAc/E,GACvBZ,EAAS6F,GAAc7E,GACvBhB,EAAS6F,GAAc3E,KAGG,IAAxB4F,GAAajG,SACfb,EAAS2F,GAAc9E,GACvBb,EAAS6F,GAAc5E,GACvBjB,EAAS6F,GAAc3E,KAKvBqG,EAAII,WACFhC,KAAiBC,KACnBD,GAAerF,EAAMqF,KAGvB3F,EAAS2F,GAAc4B,EAAII,WAGzBJ,EAAIK,WACF/B,KAAiBC,KACnBD,GAAevF,EAAMuF,KAGvB7F,EAAS6F,GAAc0B,EAAIK,WAGzBL,EAAIC,mBACNxH,EAASkH,GAAqBK,EAAIC,mBAIhCZ,KACFjB,GAAa,UAAW,GAItBU,IACFrG,EAAS2F,GAAc,CAAC,OAAQ,OAAQ,SAItCA,GAAakC,QACf7H,EAAS2F,GAAc,CAAC,iBACjBI,GAAY+B,OAKjB7K,GACFA,EAAOsK,GAGTH,GAASG,EACX,EAOIQ,GAAe,SAAsBC,GACvC1J,EAAU6E,EAAUG,QAAS,CAAElD,QAAS4H,IACxC,IACEA,EAAKC,WAAWC,YAAYF,EAC9B,CAAE,MAAOlF,IACPkF,EAAKG,UAAY1D,CACnB,CACF,EAQI2D,GAAmB,SAA0BC,EAAML,GACrD,IACE1J,EAAU6E,EAAUG,QAAS,CAC3BgF,UAAWN,EAAKO,iBAAiBF,GACjCzL,KAAMoL,GAEV,CAAE,MAAOlF,IACPxE,EAAU6E,EAAUG,QAAS,CAC3BgF,UAAW,KACX1L,KAAMoL,GAEV,CAEAA,EAAKQ,gBAAgBH,EACvB,EAQII,GAAgB,SAAuBC,GAEzC,IAAIC,OAAM,EACNC,OAAoB,EAExB,GAAIrC,GACFmC,EAAQ,oBAAsBA,MACzB,CAEL,IAAIG,EAAUlK,EAAY+J,EAAO,eACjCE,EAAoBC,GAAWA,EAAQ,EACzC,CAEA,IAAIC,EAAetE,EAAqBA,EAAmB5B,WAAW8F,GAASA,EAE/E,IACEC,GAAM,IAAIxE,GAAY4E,gBAAgBD,EAAc,YACtD,CAAE,MAAOhG,IAAI,CAGb,IAAK6F,IAAQA,EAAIK,gBAAiB,CAEhC,IACIC,GAFJN,EAAM/D,EAAeO,mBAAmB,KAExB8D,KAEhBA,EAAKhB,WAAWC,YAAYe,EAAKhB,WAAWiB,mBAC5CD,EAAKd,UAAYW,CACnB,CAOA,OALIJ,GAASE,GACXD,EAAIM,KAAKE,aAAa/G,EAASgH,eAAeR,GAAoBD,EAAIM,KAAKI,WAAW,IAAM,MAIvFvE,GAAqBwE,KAAKX,EAAKtC,GAAiB,OAAS,QAAQ,EAC1E,EAQIkD,GAAkB,SAAyBnG,GAC7C,OAAOyB,EAAmByE,KAAKlG,EAAKmB,eAAiBnB,EAAMA,EAAMS,EAAW2F,aAAe3F,EAAW4F,aAAe5F,EAAW6F,WAAW,WACzI,OAAO7F,EAAW8F,aACpB,IAAG,EACL,EAQIC,GAAe,SAAsBC,GACvC,QAAIA,aAAe5F,GAAQ4F,aAAe3F,GAId,iBAAjB2F,EAAIC,UAAoD,iBAApBD,EAAIE,aAAuD,mBAApBF,EAAI3B,aAAgC2B,EAAIG,sBAAsBjG,GAAgD,mBAAxB8F,EAAIrB,iBAA8D,mBAArBqB,EAAII,cAA2D,iBAArBJ,EAAIK,aAKzQ,EAQIC,GAAU,SAAiB5J,GAC7B,MAAuE,iBAA/C,IAATqD,EAAuB,YAAclC,EAAQkC,IAAsBrD,aAAkBqD,EAAOrD,GAA8E,iBAAjD,IAAXA,EAAyB,YAAcmB,EAAQnB,KAAoD,iBAApBA,EAAOgD,UAAoD,iBAApBhD,EAAOuJ,QAC5P,EAUIM,GAAe,SAAsBC,EAAYC,EAAaC,GAC3DrF,GAAMmF,IAIXpM,EAAaiH,GAAMmF,IAAa,SAAUG,GACxCA,EAAKlB,KAAKnG,EAAWmH,EAAaC,EAAMnD,GAC1C,GACF,EAYIqD,GAAoB,SAA2BH,GACjD,IAAIhG,OAAU,EAMd,GAHA8F,GAAa,yBAA0BE,EAAa,MAGhDV,GAAaU,GAEf,OADAvC,GAAauC,IACN,EAIT,GAAI3L,EAAY2L,EAAYR,SAAU,mBAEpC,OADA/B,GAAauC,IACN,EAIT,IAAII,EAAUlM,EAAkB8L,EAAYR,UAS5C,GANAM,GAAa,sBAAuBE,EAAa,CAC/CI,QAASA,EACTC,YAAahF,MAIE,QAAZ+E,GAAiC,SAAZA,IAAqF,IAA9DJ,EAAYM,iBAAiB,sBAAsBjO,OAElG,OADAoL,GAAauC,IACN,EAIT,IAAKH,GAAQG,EAAYpB,sBAAwBiB,GAAQG,EAAYhG,WAAa6F,GAAQG,EAAYhG,QAAQ4E,qBAAuB/J,EAAW,WAAYmL,EAAYO,YAAc1L,EAAW,WAAYmL,EAAYP,aAEvN,OADAhC,GAAauC,IACN,EAIT,IAAK3E,GAAa+E,IAAY3E,GAAY2E,GAAU,CAElD,GAAI9D,KAAiBG,GAAgB2D,IAAsD,mBAAnCJ,EAAYQ,mBAClE,IACE,IAAIC,EAAeT,EAAYO,UAC/BP,EAAYQ,mBAAmB,WAAYtG,EAAqBA,EAAmB5B,WAAWmI,GAAgBA,EAChH,CAAE,MAAOjI,IAAI,CAIf,OADAiF,GAAauC,IACN,CACT,CAGA,MAAiB,aAAZI,GAAsC,YAAZA,IAA0BvL,EAAW,uBAAwBmL,EAAYO,YAMpGzE,IAA+C,IAAzBkE,EAAY/G,WAEpCe,EAAUgG,EAAYP,YACtBzF,EAAUzF,EAAcyF,EAASc,GAAkB,KACnDd,EAAUzF,EAAcyF,EAASe,GAAa,KAC1CiF,EAAYP,cAAgBzF,IAC9BhG,EAAU6E,EAAUG,QAAS,CAAElD,QAASkK,EAAYU,cACpDV,EAAYP,YAAczF,IAK9B8F,GAAa,wBAAyBE,EAAa,OAE5C,IAnBLvC,GAAauC,IACN,EAmBX,EAWIW,GAAoB,SAA2BC,EAAOC,EAAQC,GAEhE,GAAIzE,KAA4B,OAAXwE,GAA8B,SAAXA,KAAuBC,KAAShJ,GAAYgJ,KAAS/D,IAC3F,OAAO,EAOT,GAAInB,IAAmB/G,EAAWmG,GAAc6F,SAAgB,GAAIlF,IAAmB9G,EAAWoG,GAAc4F,QAAgB,KAAKtF,GAAasF,IAAWnF,GAAYmF,GACvK,OAAO,EAGF,GAAIjE,GAAoBiE,SAAgB,GAAIhM,EAAWuG,GAAmB7G,EAAcuM,EAAO3F,GAAoB,WAAa,GAAgB,QAAX0F,GAA+B,eAAXA,GAAsC,SAAXA,GAAgC,WAAVD,GAAwD,IAAlCnM,EAAcqM,EAAO,WAAkBpE,GAAckE,GAAe,GAAI/E,KAA4BhH,EAAWqG,GAAsB3G,EAAcuM,EAAO3F,GAAoB,WAAa,GAAK2F,EACra,OAAO,CACT,CAEA,OAAO,CACT,EAYIC,GAAsB,SAA6Bf,GACrD,IAAIgB,OAAO,EACPF,OAAQ,EACRD,OAAS,EACThL,OAAI,EAERiK,GAAa,2BAA4BE,EAAa,MAEtD,IAAIN,EAAaM,EAAYN,WAI7B,GAAKA,EAAL,CAIA,IAAIuB,EAAY,CACdC,SAAU,GACVC,UAAW,GACXC,UAAU,EACVC,kBAAmB9F,IAKrB,IAHA1F,EAAI6J,EAAWrN,OAGRwD,KAAK,CAEV,IAAIyL,EADJN,EAAOtB,EAAW7J,GAEdkI,EAAOuD,EAAMvD,KACb6B,EAAe0B,EAAM1B,aAazB,GAXAkB,EAAQnM,EAAWqM,EAAKF,OACxBD,EAAS3M,EAAkB6J,GAG3BkD,EAAUC,SAAWL,EACrBI,EAAUE,UAAYL,EACtBG,EAAUG,UAAW,EACrBH,EAAUM,mBAAgB3I,EAC1BkH,GAAa,wBAAyBE,EAAaiB,GACnDH,EAAQG,EAAUE,WAEdF,EAAUM,gBAKdzD,GAAiBC,EAAMiC,GAGlBiB,EAAUG,UAKf,GAAIvM,EAAW,OAAQiM,GACrBhD,GAAiBC,EAAMiC,OADzB,CAMIlE,KACFgF,EAAQvM,EAAcuM,EAAOhG,GAAkB,KAC/CgG,EAAQvM,EAAcuM,EAAO/F,GAAa,MAI5C,IAAI6F,EAAQZ,EAAYR,SAASpL,cACjC,GAAKuM,GAAkBC,EAAOC,EAAQC,GAKtC,IACMlB,EACFI,EAAYwB,eAAe5B,EAAc7B,EAAM+C,GAG/Cd,EAAYL,aAAa5B,EAAM+C,GAGjChN,EAAS+E,EAAUG,QACrB,CAAE,MAAOR,IAAI,CAxBb,CAyBF,CAGAsH,GAAa,0BAA2BE,EAAa,KAxErD,CAyEF,EAOIyB,GAAqB,SAASA,EAAmBC,GACnD,IAAIC,OAAa,EACbC,EAAiB3C,GAAgByC,GAKrC,IAFA5B,GAAa,0BAA2B4B,EAAU,MAE3CC,EAAaC,EAAeC,YAEjC/B,GAAa,yBAA0B6B,EAAY,MAG/CxB,GAAkBwB,KAKlBA,EAAW3H,mBAAmBZ,GAChCqI,EAAmBE,EAAW3H,SAIhC+G,GAAoBY,IAItB7B,GAAa,yBAA0B4B,EAAU,KACnD,EAuQA,OA7PA7I,EAAUiJ,SAAW,SAAU1D,EAAOnB,GACpC,IAAI0B,OAAO,EACPoD,OAAe,EACf/B,OAAc,EACdgC,OAAU,EACVC,OAAa,EASjB,GALK7D,IACHA,EAAQ,eAIW,iBAAVA,IAAuByB,GAAQzB,GAAQ,CAEhD,GAA8B,mBAAnBA,EAAM8D,SACf,MAAMlN,EAAgB,8BAGtB,GAAqB,iBADrBoJ,EAAQA,EAAM8D,YAEZ,MAAMlN,EAAgB,kCAG5B,CAGA,IAAK6D,EAAUK,YAAa,CAC1B,GAAqC,WAAjC9B,EAAQO,EAAOwK,eAA6D,mBAAxBxK,EAAOwK,aAA6B,CAC1F,GAAqB,iBAAV/D,EACT,OAAOzG,EAAOwK,aAAa/D,GAG7B,GAAIyB,GAAQzB,GACV,OAAOzG,EAAOwK,aAAa/D,EAAMP,UAErC,CAEA,OAAOO,CACT,CAeA,GAZKpC,IACHgB,GAAaC,GAIfpE,EAAUG,QAAU,GAGC,iBAAVoF,IACT7B,IAAW,GAGTA,SAAiB,GAAI6B,aAAiB9E,EAKV,KAD9ByI,GADApD,EAAOR,GAAc,kBACDlE,cAAcS,WAAW0D,GAAO,IACnCnF,UAA4C,SAA1B8I,EAAavC,UAGX,SAA1BuC,EAAavC,SADtBb,EAAOoD,EAKPpD,EAAKyD,YAAYL,OAEd,CAEL,IAAK7F,KAAeJ,KAAuBC,KAEnB,IAAxBqC,EAAM1J,QAAQ,KACZ,OAAOwF,GAAsBE,GAAsBF,EAAmB5B,WAAW8F,GAASA,EAO5F,KAHAO,EAAOR,GAAcC,IAInB,OAAOlC,GAAa,KAAO/B,CAE/B,CAGIwE,GAAQ1C,IACVwB,GAAakB,EAAK0D,YAOpB,IAHA,IAAIC,EAAerD,GAAgB1C,GAAW6B,EAAQO,GAG/CqB,EAAcsC,EAAaT,YAEH,IAAzB7B,EAAY/G,UAAkB+G,IAAgBgC,GAK9C7B,GAAkBH,KAKlBA,EAAYhG,mBAAmBZ,GACjCqI,GAAmBzB,EAAYhG,SAIjC+G,GAAoBf,GAEpBgC,EAAUhC,GAMZ,GAHAgC,EAAU,KAGNzF,GACF,OAAO6B,EAIT,GAAIlC,GAAY,CACd,GAAIC,GAGF,IAFA8F,EAAaxH,GAAuBuE,KAAKL,EAAK1E,eAEvC0E,EAAK0D,YAEVJ,EAAWG,YAAYzD,EAAK0D,iBAG9BJ,EAAatD,EAcf,OAXIvC,KAQF6F,EAAavH,GAAWsE,KAAK7F,EAAkB8I,GAAY,IAGtDA,CACT,CAEA,IAAIM,EAAiBxG,GAAiB4C,EAAKd,UAAYc,EAAK4B,UAQ5D,OALIzE,KACFyG,EAAiBhO,EAAcgO,EAAgBzH,GAAkB,KACjEyH,EAAiBhO,EAAcgO,EAAgBxH,GAAa,MAGvDb,GAAsBE,GAAsBF,EAAmB5B,WAAWiK,GAAkBA,CACrG,EAQA1J,EAAU2J,UAAY,SAAUvF,GAC9BD,GAAaC,GACbjB,IAAa,CACf,EAOAnD,EAAU4J,YAAc,WACtB3F,GAAS,KACTd,IAAa,CACf,EAYAnD,EAAU6J,iBAAmB,SAAUC,EAAK3B,EAAMF,GAE3ChE,IACHE,GAAa,CAAC,GAGhB,IAAI4D,EAAQ1M,EAAkByO,GAC1B9B,EAAS3M,EAAkB8M,GAC/B,OAAOL,GAAkBC,EAAOC,EAAQC,EAC1C,EASAjI,EAAU+J,QAAU,SAAU7C,EAAY8C,GACZ,mBAAjBA,IAIXjI,GAAMmF,GAAcnF,GAAMmF,IAAe,GACzC/L,EAAU4G,GAAMmF,GAAa8C,GAC/B,EASAhK,EAAUiK,WAAa,SAAU/C,GAC3BnF,GAAMmF,IACRjM,EAAS8G,GAAMmF,GAEnB,EAQAlH,EAAUkK,YAAc,SAAUhD,GAC5BnF,GAAMmF,KACRnF,GAAMmF,GAAc,GAExB,EAOAlH,EAAUmK,eAAiB,WACzBpI,GAAQ,CAAC,CACX,EAEO/B,CACT,CAIA,OAFaF,GAIf,CA1oCkFsK,8FCDlF,MAAMC,EAAe,CACnB,QAAW,KACX,WAAY,MAGRC,EAAmB,CACvB,QAAW,uCACX,WAAY,sDAcd,MAXcrQ,IAAA,IAAC,KAAEsQ,GAAMtQ,EAAA,OACrBuQ,EAAAA,cAAA,OAAKC,UAAU,SACbD,EAAAA,cAAA,QAAME,KAAK,MAAM,aAAYH,GACzBF,EAAaE,GACfC,EAAAA,cAAA,QAAMC,UAAU,WACZH,EAAiBC,KAGnB,ECTR,SAASI,IACP,MAAO,CACLC,OAAO,EACPC,QAAS,KACTC,QAAQ,EACRC,WAAY,KACZC,KAAK,EACLC,WAAW,EACXC,aAAc,GACdC,UAAW,KACXpJ,MAAO,KACPqJ,WAAY,YACZC,QAAQ,EACRC,UAAU,EACVC,SAAU,KACVtC,UAAU,EACVuC,UAAW,KACXC,QAAQ,EACRC,aAAa,EACbC,UAAW,KACXC,WAAY,KACZC,OAAO,EAEX,CAEA,IAAIC,EAxBK,CACLlB,OAAO,EACPC,QAAS,KACTC,QAAQ,EACRC,WAAY,KACZC,KAAK,EACLC,WAAW,EACXC,aAAc,GACdC,UAAW,KACXpJ,MAAO,KACPqJ,WAAY,YACZC,QAAQ,EACRC,UAAU,EACVC,SAAU,KACVtC,UAAU,EACVuC,UAAW,KACXC,QAAQ,EACRC,aAAa,EACbC,UAAW,KACXC,WAAY,KACZC,OAAO,GAaX,MAAME,EAAa,UACbC,EAAgB,IAAI/P,OAAO8P,EAAWE,OAAQ,KAC9CC,EAAqB,oDACrBC,EAAwB,IAAIlQ,OAAOiQ,EAAmBD,OAAQ,KAC9DG,EAAqB,CACzB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,SAEDC,EAAwBC,GAAOF,EAAmBE,GACxD,SAAS,EAAO/O,EAAMgP,GACpB,GAAIA,GACF,GAAIR,EAAW7P,KAAKqB,GAClB,OAAOA,EAAK5B,QAAQqQ,EAAeK,QAGrC,GAAIH,EAAmBhQ,KAAKqB,GAC1B,OAAOA,EAAK5B,QAAQwQ,EAAuBE,GAI/C,OAAO9O,CACT,CAEA,MAAMiP,EAAe,6CAKrB,SAAS,EAASjP,GAEhB,OAAOA,EAAK5B,QAAQ6Q,GAAc,CAAC7M,EAAG8M,IAE1B,WADVA,EAAIA,EAAElR,eACoB,IACN,MAAhBkR,EAAEC,OAAO,GACY,MAAhBD,EAAEC,OAAO,GACZpR,OAAOqR,aAAaC,SAASH,EAAEI,UAAU,GAAI,KAC7CvR,OAAOqR,cAAcF,EAAEI,UAAU,IAEhC,IAEX,CAEA,MAAMC,EAAQ,eAMd,SAASC,EAAKC,EAAOC,GACnBD,EAAyB,iBAAVA,EAAqBA,EAAQA,EAAMf,OAClDgB,EAAMA,GAAO,GACb,MAAMvO,EAAM,CACV/C,QAAS,CAACuJ,EAAMgI,KAEdA,GADAA,EAAMA,EAAIjB,QAAUiB,GACVvR,QAAQmR,EAAO,MACzBE,EAAQA,EAAMrR,QAAQuJ,EAAMgI,GACrBxO,GAETyO,SAAU,IACD,IAAIlR,OAAO+Q,EAAOC,IAG7B,OAAOvO,CACT,CAEA,MAAM0O,EAAsB,UACtBC,EAAuB,gCAO7B,SAASC,EAASrE,EAAUsE,EAAMC,GAChC,GAAIvE,EAAU,CACZ,IAAIwE,EACJ,IACEA,EAAOC,mBAAmB,EAASF,IAChC7R,QAAQyR,EAAqB,IAC7B7R,aACL,CAAE,MAAOoS,GACP,OAAO,IACT,CACA,GAAoC,IAAhCF,EAAK5R,QAAQ,gBAAsD,IAA9B4R,EAAK5R,QAAQ,cAAgD,IAA1B4R,EAAK5R,QAAQ,SACvF,OAAO,IAEX,CACI0R,IAASF,EAAqBnR,KAAKsR,KACrCA,EAmBJ,SAAoBD,EAAMC,GACnBI,EAAS,IAAML,KAIdM,EAAW3R,KAAKqR,GAClBK,EAAS,IAAML,GAAQA,EAAO,IAE9BK,EAAS,IAAML,GAAQO,EAAMP,EAAM,KAAK,IAG5CA,EAAOK,EAAS,IAAML,GACtB,MAAMQ,GAAsC,IAAvBR,EAAK1R,QAAQ,KAElC,MAA6B,OAAzB2R,EAAKX,UAAU,EAAG,GAChBkB,EACKP,EAEFD,EAAK5R,QAAQqS,EAAU,MAAQR,EACV,MAAnBA,EAAKd,OAAO,GACjBqB,EACKP,EAEFD,EAAK5R,QAAQsS,EAAQ,MAAQT,EAE7BD,EAAOC,CAElB,CA9CWU,CAAWX,EAAMC,IAE1B,IACEA,EAAOW,UAAUX,GAAM7R,QAAQ,OAAQ,IACzC,CAAE,MAAOgS,GACP,OAAO,IACT,CACA,OAAOH,CACT,CAEA,MAAMI,EAAW,CAAC,EACZC,EAAa,mBACbG,EAAW,oBACXC,EAAS,4BAmCf,MAAMG,EAAW,CAAEC,KAAM,WAAqB,GAE9C,SAASC,EAAWC,EAAUC,GAG5B,MAaEC,EAbUF,EAAS5S,QAAQ,OAAO,CAACF,EAAOiT,EAAQC,KAChD,IAAIC,GAAU,EACZC,EAAOH,EACT,OAASG,GAAQ,GAAmB,OAAdF,EAAIE,IAAgBD,GAAWA,EACrD,OAAIA,EAGK,IAGA,IACT,IAEUE,MAAM,OACpB,IAAIxV,EAAI,EAMR,GAHKmV,EAAM,GAAG1S,QAAU0S,EAAMM,QAC1BN,EAAMjV,OAAS,IAAMiV,EAAMA,EAAMjV,OAAS,GAAGuC,QAAU0S,EAAMvT,MAE7DuT,EAAMjV,OAASgV,EACjBC,EAAMO,OAAOR,QAEb,KAAOC,EAAMjV,OAASgV,GAAOC,EAAMrT,KAAK,IAG1C,KAAO9B,EAAImV,EAAMjV,OAAQF,IAEvBmV,EAAMnV,GAAKmV,EAAMnV,GAAGyC,OAAOJ,QAAQ,QAAS,KAE9C,OAAO8S,CACT,CAUA,SAASX,EAAMa,EAAKM,EAAGC,GACrB,MAAMlS,EAAI2R,EAAInV,OACd,GAAU,IAANwD,EACF,MAAO,GAIT,IAAImS,EAAU,EAGd,KAAOA,EAAUnS,GAAG,CAClB,MAAMoS,EAAWT,EAAIjC,OAAO1P,EAAImS,EAAU,GAC1C,GAAIC,IAAaH,GAAMC,EAEhB,IAAIE,IAAaH,IAAKC,EAG3B,MAFAC,GAGF,MALEA,GAMJ,CAEA,OAAOR,EAAIU,MAAM,EAAGrS,EAAImS,EAC1B,CAmCA,SAASG,EAAaC,EAASf,GAC7B,GAAIA,EAAQ,EACV,MAAO,GAET,IAAIgB,EAAS,GACb,KAAOhB,EAAQ,GACD,EAARA,IACFgB,GAAUD,GAEZf,IAAU,EACVe,GAAWA,EAEb,OAAOC,EAASD,CAClB,CAEA,SAASE,EAAWC,EAAKC,EAAMC,EAAKC,GAClC,MAAMrC,EAAOmC,EAAKnC,KACZsC,EAAQH,EAAKG,MAAQ,EAAOH,EAAKG,OAAS,KAC1CnS,EAAO+R,EAAI,GAAG/T,QAAQ,cAAe,MAE3C,GAAyB,MAArB+T,EAAI,GAAGhD,OAAO,GAAY,CAC5BmD,EAAME,MAAMC,QAAS,EACrB,MAAMC,EAAQ,CACZ1F,KAAM,OACNqF,MACApC,OACAsC,QACAnS,OACAuS,OAAQL,EAAMM,aAAaxS,IAG7B,OADAkS,EAAME,MAAMC,QAAS,EACdC,CACT,CACA,MAAO,CACL1F,KAAM,QACNqF,MACApC,OACAsC,QACAnS,KAAM,EAAOA,GAEjB,CAiCA,MAAMyS,EACJ,WAAAzR,CAAY0R,GACVC,KAAKD,QAAUA,GAAWvE,CAC5B,CAEA,KAAAyE,CAAMC,GACJ,MAAMd,EAAMY,KAAKG,MAAMC,MAAMC,QAAQtC,KAAKmC,GAC1C,GAAId,GAAOA,EAAI,GAAGlW,OAAS,EACzB,MAAO,CACL+Q,KAAM,QACNqF,IAAKF,EAAI,GAGf,CAEA,IAAAkB,CAAKJ,GACH,MAAMd,EAAMY,KAAKG,MAAMC,MAAME,KAAKvC,KAAKmC,GACvC,GAAId,EAAK,CACP,MAAM/R,EAAO+R,EAAI,GAAG/T,QAAQ,YAAa,IACzC,MAAO,CACL4O,KAAM,OACNqF,IAAKF,EAAI,GACTmB,eAAgB,WAChBlT,KAAO2S,KAAKD,QAAQ/E,SAEhB3N,EADAmQ,EAAMnQ,EAAM,MAGpB,CACF,CAEA,MAAAmT,CAAON,GACL,MAAMd,EAAMY,KAAKG,MAAMC,MAAMI,OAAOzC,KAAKmC,GACzC,GAAId,EAAK,CACP,MAAME,EAAMF,EAAI,GACV/R,EAjEZ,SAAgCiS,EAAKjS,GACnC,MAAMoT,EAAoBnB,EAAInU,MAAM,iBAEpC,GAA0B,OAAtBsV,EACF,OAAOpT,EAGT,MAAMqT,EAAeD,EAAkB,GAEvC,OAAOpT,EACJmR,MAAM,MACNmC,KAAIpM,IACH,MAAMqM,EAAoBrM,EAAKpJ,MAAM,QACrC,GAA0B,OAAtByV,EACF,OAAOrM,EAGT,MAAOsM,GAAgBD,EAEvB,OAAIC,EAAa3X,QAAUwX,EAAaxX,OAC/BqL,EAAKwK,MAAM2B,EAAaxX,QAG1BqL,CAAI,IAEZuM,KAAK,KACV,CAuCmBC,CAAuBzB,EAAKF,EAAI,IAAM,IAEnD,MAAO,CACLnF,KAAM,OACNqF,MACA0B,KAAM5B,EAAI,GAAKA,EAAI,GAAG3T,OAAOJ,QAAQ2U,KAAKG,MAAMc,OAAOC,SAAU,MAAQ9B,EAAI,GAC7E/R,OAEJ,CACF,CAEA,OAAA8T,CAAQjB,GACN,MAAMd,EAAMY,KAAKG,MAAMC,MAAMe,QAAQpD,KAAKmC,GAC1C,GAAId,EAAK,CACP,IAAI/R,EAAO+R,EAAI,GAAG3T,OAGlB,GAAI,KAAKG,KAAKyB,GAAO,CACnB,MAAM+T,EAAU5D,EAAMnQ,EAAM,KACxB2S,KAAKD,QAAQ/E,SACf3N,EAAO+T,EAAQ3V,OACL2V,IAAW,KAAKxV,KAAKwV,KAE/B/T,EAAO+T,EAAQ3V,OAEnB,CAEA,MAAO,CACLwO,KAAM,UACNqF,IAAKF,EAAI,GACTiC,MAAOjC,EAAI,GAAGlW,OACdmE,OACAuS,OAAQI,KAAKT,MAAM0B,OAAO5T,GAE9B,CACF,CAEA,EAAAiU,CAAGpB,GACD,MAAMd,EAAMY,KAAKG,MAAMC,MAAMkB,GAAGvD,KAAKmC,GACrC,GAAId,EACF,MAAO,CACLnF,KAAM,KACNqF,IAAKF,EAAI,GAGf,CAEA,UAAAmC,CAAWrB,GACT,MAAMd,EAAMY,KAAKG,MAAMC,MAAMmB,WAAWxD,KAAKmC,GAC7C,GAAId,EAAK,CACP,MAAM/R,EAAO+R,EAAI,GAAG/T,QAAQ,eAAgB,IACtCmW,EAAMxB,KAAKT,MAAME,MAAM+B,IAC7BxB,KAAKT,MAAME,MAAM+B,KAAM,EACvB,MAAM5B,EAASI,KAAKT,MAAMkC,YAAYpU,GAEtC,OADA2S,KAAKT,MAAME,MAAM+B,IAAMA,EAChB,CACLvH,KAAM,aACNqF,IAAKF,EAAI,GACTQ,SACAvS,OAEJ,CACF,CAEA,IAAAqU,CAAKxB,GACH,IAAId,EAAMY,KAAKG,MAAMC,MAAMsB,KAAK3D,KAAKmC,GACrC,GAAId,EAAK,CACP,IAAIE,EAAKqC,EAAQC,EAAWC,EAAQ7Y,EAAG8Y,EAAWC,EAChDC,EAAMC,EAAUC,EAASC,EAAcC,EAErCC,EAAOjD,EAAI,GAAG3T,OAClB,MAAM6W,EAAYD,EAAKnZ,OAAS,EAE1BwY,EAAO,CACXzH,KAAM,OACNqF,IAAK,GACLiD,QAASD,EACTE,MAAOF,GAAaD,EAAKtD,MAAM,GAAI,GAAK,GACxC0D,OAAO,EACPC,MAAO,IAGTL,EAAOC,EAAY,aAAaD,EAAKtD,OAAO,KAAO,KAAKsD,IAEpDrC,KAAKD,QAAQ/E,WACfqH,EAAOC,EAAYD,EAAO,SAI5B,MAAMM,EAAY,IAAIhX,OAAO,WAAW0W,kCAGxC,KAAOnC,IACLkC,GAAW,EACLhD,EAAMuD,EAAU5E,KAAKmC,MAIvBF,KAAKG,MAAMC,MAAMkB,GAAG1V,KAAKsU,IANnB,CAkCV,GAxBAZ,EAAMF,EAAI,GACVc,EAAMA,EAAI3D,UAAU+C,EAAIpW,QAExB8Y,EAAO5C,EAAI,GAAGZ,MAAM,KAAM,GAAG,GAAGnT,QAAQ,QAASuX,GAAM,IAAIC,OAAO,EAAID,EAAE1Z,UACxE+Y,EAAW/B,EAAI1B,MAAM,KAAM,GAAG,GAE1BwB,KAAKD,QAAQ/E,UACf6G,EAAS,EACTM,EAAeH,EAAKc,aAEpBjB,EAASzC,EAAI,GAAG2D,OAAO,QACvBlB,EAASA,EAAS,EAAI,EAAIA,EAC1BM,EAAeH,EAAKjD,MAAM8C,GAC1BA,GAAUzC,EAAI,GAAGlW,QAGnB4Y,GAAY,GAEPE,GAAQ,OAAOpW,KAAKqW,KACvB3C,GAAO2C,EAAW,KAClB/B,EAAMA,EAAI3D,UAAU0F,EAAS/Y,OAAS,GACtCkZ,GAAW,IAGRA,EAAU,CACb,MAAMY,EAAkB,IAAIrX,OAAO,QAAQsX,KAAKC,IAAI,EAAGrB,EAAS,yDAC1DsB,EAAU,IAAIxX,OAAO,QAAQsX,KAAKC,IAAI,EAAGrB,EAAS,wDAClDuB,EAAmB,IAAIzX,OAAO,QAAQsX,KAAKC,IAAI,EAAGrB,EAAS,qBAC3DwB,EAAoB,IAAI1X,OAAO,QAAQsX,KAAKC,IAAI,EAAGrB,EAAS,QAGlE,KAAO3B,IACLgC,EAAUhC,EAAI1B,MAAM,KAAM,GAAG,GAC7ByD,EAAWC,EAGPlC,KAAKD,QAAQ/E,WACfiH,EAAWA,EAAS5W,QAAQ,0BAA2B,QAIrD+X,EAAiBxX,KAAKqW,MAKtBoB,EAAkBzX,KAAKqW,KAKvBe,EAAgBpX,KAAKqW,KAKrBkB,EAAQvX,KAAKsU,IAzBP,CA6BV,GAAI+B,EAASc,OAAO,SAAWlB,IAAWI,EAASxW,OACjD0W,GAAgB,KAAOF,EAASlD,MAAM8C,OACjC,CAEL,GAAIC,EACF,MAIF,GAAIE,EAAKe,OAAO,SAAW,EACzB,MAEF,GAAIK,EAAiBxX,KAAKoW,GACxB,MAEF,GAAIqB,EAAkBzX,KAAKoW,GACzB,MAEF,GAAImB,EAAQvX,KAAKoW,GACf,MAGFG,GAAgB,KAAOF,CACzB,CAEKH,GAAcG,EAASxW,SAC1BqW,GAAY,GAGdxC,GAAO4C,EAAU,KACjBhC,EAAMA,EAAI3D,UAAU2F,EAAQhZ,OAAS,GACrC8Y,EAAOC,EAASlD,MAAM8C,EACxB,CACF,CAEKH,EAAKe,QAEJV,EACFL,EAAKe,OAAQ,EACJ,YAAY7W,KAAK0T,KAC1ByC,GAAoB,IAKpB/B,KAAKD,QAAQrF,MACfiH,EAAS,cAAc5D,KAAKoE,GACxBR,IACFC,EAA0B,SAAdD,EAAO,GACnBQ,EAAeA,EAAa9W,QAAQ,eAAgB,MAIxDqW,EAAKgB,MAAM5X,KAAK,CACdmP,KAAM,YACNqF,MACAgE,OAAQ3B,EACR4B,QAAS3B,EACTa,OAAO,EACPpV,KAAM8U,IAGRT,EAAKpC,KAAOA,CACd,CAGAoC,EAAKgB,MAAMhB,EAAKgB,MAAMxZ,OAAS,GAAGoW,IAAMA,EAAIkE,YAC5C9B,EAAKgB,MAAMhB,EAAKgB,MAAMxZ,OAAS,GAAGmE,KAAO8U,EAAaqB,YACtD9B,EAAKpC,IAAMoC,EAAKpC,IAAIkE,YAEpB,MAAM9W,EAAIgV,EAAKgB,MAAMxZ,OAGrB,IAAKF,EAAI,EAAGA,EAAI0D,EAAG1D,IAIjB,GAHAgX,KAAKT,MAAME,MAAM+B,KAAM,EACvBE,EAAKgB,MAAM1Z,GAAG4W,OAASI,KAAKT,MAAMkC,YAAYC,EAAKgB,MAAM1Z,GAAGqE,KAAM,KAE7DqU,EAAKe,MAAO,CAEf,MAAMgB,EAAU/B,EAAKgB,MAAM1Z,GAAG4W,OAAO8D,QAAOd,GAAgB,UAAXA,EAAE3I,OAC7C0J,EAAwBF,EAAQva,OAAS,GAAKua,EAAQG,MAAKhB,GAAK,SAAShX,KAAKgX,EAAEtD,OAEtFoC,EAAKe,MAAQkB,CACf,CAIF,GAAIjC,EAAKe,MACP,IAAKzZ,EAAI,EAAGA,EAAI0D,EAAG1D,IACjB0Y,EAAKgB,MAAM1Z,GAAGyZ,OAAQ,EAI1B,OAAOf,CACT,CACF,CAEA,IAAAzU,CAAKiT,GACH,MAAMd,EAAMY,KAAKG,MAAMC,MAAMnT,KAAK8Q,KAAKmC,GACvC,GAAId,EAAK,CACP,MAAMO,EAAQ,CACZ1F,KAAM,OACNqF,IAAKF,EAAI,GACTyE,KAAM7D,KAAKD,QAAQ7E,YACF,QAAXkE,EAAI,IAA2B,WAAXA,EAAI,IAA8B,UAAXA,EAAI,IACrD/R,KAAM+R,EAAI,IAEZ,GAAIY,KAAKD,QAAQpH,SAAU,CACzB,MAAMtL,EAAO2S,KAAKD,QAAQ7E,UAAY8E,KAAKD,QAAQ7E,UAAUkE,EAAI,IAAM,EAAOA,EAAI,IAClFO,EAAM1F,KAAO,YACb0F,EAAMtS,KAAOA,EACbsS,EAAMC,OAASI,KAAKT,MAAM0B,OAAO5T,EACnC,CACA,OAAOsS,CACT,CACF,CAEA,GAAAmE,CAAI5D,GACF,MAAMd,EAAMY,KAAKG,MAAMC,MAAM0D,IAAI/F,KAAKmC,GACtC,GAAId,EAAK,CACP,MAAM5F,EAAM4F,EAAI,GAAGnU,cAAcI,QAAQ,OAAQ,KAC3C6R,EAAOkC,EAAI,GAAKA,EAAI,GAAG/T,QAAQ,WAAY,MAAMA,QAAQ2U,KAAKG,MAAMc,OAAOC,SAAU,MAAQ,GAC7F1B,EAAQJ,EAAI,GAAKA,EAAI,GAAG7C,UAAU,EAAG6C,EAAI,GAAGlW,OAAS,GAAGmC,QAAQ2U,KAAKG,MAAMc,OAAOC,SAAU,MAAQ9B,EAAI,GAC9G,MAAO,CACLnF,KAAM,MACNT,MACA8F,IAAKF,EAAI,GACTlC,OACAsC,QAEJ,CACF,CAEA,KAAApL,CAAM8L,GACJ,MAAMd,EAAMY,KAAKG,MAAMC,MAAMhM,MAAM2J,KAAKmC,GACxC,GAAId,EAAK,CACP,MAAM2E,EAAO,CACX9J,KAAM,QACN+J,OAAQhG,EAAWoB,EAAI,IAAIuB,KAAIhC,IAAc,CAAEtR,KAAMsR,MACrDsF,MAAO7E,EAAI,GAAG/T,QAAQ,aAAc,IAAImT,MAAM,UAC9C0F,KAAM9E,EAAI,IAAMA,EAAI,GAAG3T,OAAS2T,EAAI,GAAG/T,QAAQ,YAAa,IAAImT,MAAM,MAAQ,IAGhF,GAAIuF,EAAKC,OAAO9a,SAAW6a,EAAKE,MAAM/a,OAAQ,CAC5C6a,EAAKzE,IAAMF,EAAI,GAEf,IACIpW,EAAGmb,EAAGC,EAAGC,EADT3X,EAAIqX,EAAKE,MAAM/a,OAEnB,IAAKF,EAAI,EAAGA,EAAI0D,EAAG1D,IACb,YAAY4C,KAAKmY,EAAKE,MAAMjb,IAC9B+a,EAAKE,MAAMjb,GAAK,QACP,aAAa4C,KAAKmY,EAAKE,MAAMjb,IACtC+a,EAAKE,MAAMjb,GAAK,SACP,YAAY4C,KAAKmY,EAAKE,MAAMjb,IACrC+a,EAAKE,MAAMjb,GAAK,OAEhB+a,EAAKE,MAAMjb,GAAK,KAKpB,IADA0D,EAAIqX,EAAKG,KAAKhb,OACTF,EAAI,EAAGA,EAAI0D,EAAG1D,IACjB+a,EAAKG,KAAKlb,GAAKgV,EAAW+F,EAAKG,KAAKlb,GAAI+a,EAAKC,OAAO9a,QAAQyX,KAAIhC,IAAc,CAAEtR,KAAMsR,MAOxF,IADAjS,EAAIqX,EAAKC,OAAO9a,OACXib,EAAI,EAAGA,EAAIzX,EAAGyX,IACjBJ,EAAKC,OAAOG,GAAGvE,OAASI,KAAKT,MAAM0B,OAAO8C,EAAKC,OAAOG,GAAG9W,MAK3D,IADAX,EAAIqX,EAAKG,KAAKhb,OACTib,EAAI,EAAGA,EAAIzX,EAAGyX,IAEjB,IADAE,EAAMN,EAAKG,KAAKC,GACXC,EAAI,EAAGA,EAAIC,EAAInb,OAAQkb,IAC1BC,EAAID,GAAGxE,OAASI,KAAKT,MAAM0B,OAAOoD,EAAID,GAAG/W,MAI7C,OAAO0W,CACT,CACF,CACF,CAEA,QAAAO,CAASpE,GACP,MAAMd,EAAMY,KAAKG,MAAMC,MAAMkE,SAASvG,KAAKmC,GAC3C,GAAId,EACF,MAAO,CACLnF,KAAM,UACNqF,IAAKF,EAAI,GACTiC,MAA4B,MAArBjC,EAAI,GAAGhD,OAAO,GAAa,EAAI,EACtC/O,KAAM+R,EAAI,GACVQ,OAAQI,KAAKT,MAAM0B,OAAO7B,EAAI,IAGpC,CAEA,SAAAmF,CAAUrE,GACR,MAAMd,EAAMY,KAAKG,MAAMC,MAAMmE,UAAUxG,KAAKmC,GAC5C,GAAId,EAAK,CACP,MAAM/R,EAA4C,OAArC+R,EAAI,GAAGhD,OAAOgD,EAAI,GAAGlW,OAAS,GACvCkW,EAAI,GAAGL,MAAM,GAAI,GACjBK,EAAI,GACR,MAAO,CACLnF,KAAM,YACNqF,IAAKF,EAAI,GACT/R,OACAuS,OAAQI,KAAKT,MAAM0B,OAAO5T,GAE9B,CACF,CAEA,IAAAA,CAAK6S,GACH,MAAMd,EAAMY,KAAKG,MAAMC,MAAM/S,KAAK0Q,KAAKmC,GACvC,GAAId,EACF,MAAO,CACLnF,KAAM,OACNqF,IAAKF,EAAI,GACT/R,KAAM+R,EAAI,GACVQ,OAAQI,KAAKT,MAAM0B,OAAO7B,EAAI,IAGpC,CAEA,MAAAoF,CAAOtE,GACL,MAAMd,EAAMY,KAAKG,MAAMc,OAAOuD,OAAOzG,KAAKmC,GAC1C,GAAId,EACF,MAAO,CACLnF,KAAM,SACNqF,IAAKF,EAAI,GACT/R,KAAM,EAAO+R,EAAI,IAGvB,CAEA,GAAA5F,CAAI0G,GACF,MAAMd,EAAMY,KAAKG,MAAMc,OAAOzH,IAAIuE,KAAKmC,GACvC,GAAId,EAYF,OAXKY,KAAKT,MAAME,MAAMC,QAAU,QAAQ9T,KAAKwT,EAAI,IAC/CY,KAAKT,MAAME,MAAMC,QAAS,EACjBM,KAAKT,MAAME,MAAMC,QAAU,UAAU9T,KAAKwT,EAAI,MACvDY,KAAKT,MAAME,MAAMC,QAAS,IAEvBM,KAAKT,MAAME,MAAMgF,YAAc,iCAAiC7Y,KAAKwT,EAAI,IAC5EY,KAAKT,MAAME,MAAMgF,YAAa,EACrBzE,KAAKT,MAAME,MAAMgF,YAAc,mCAAmC7Y,KAAKwT,EAAI,MACpFY,KAAKT,MAAME,MAAMgF,YAAa,GAGzB,CACLxK,KAAM+F,KAAKD,QAAQpH,SACf,OACA,OACJ2G,IAAKF,EAAI,GACTM,OAAQM,KAAKT,MAAME,MAAMC,OACzB+E,WAAYzE,KAAKT,MAAME,MAAMgF,WAC7BpX,KAAM2S,KAAKD,QAAQpH,SACdqH,KAAKD,QAAQ7E,UACZ8E,KAAKD,QAAQ7E,UAAUkE,EAAI,IAC3B,EAAOA,EAAI,IACbA,EAAI,GAGd,CAEA,IAAAC,CAAKa,GACH,MAAMd,EAAMY,KAAKG,MAAMc,OAAO5B,KAAKtB,KAAKmC,GACxC,GAAId,EAAK,CACP,MAAMsF,EAAatF,EAAI,GAAG3T,OAC1B,IAAKuU,KAAKD,QAAQ/E,UAAY,KAAKpP,KAAK8Y,GAAa,CAEnD,IAAM,KAAK9Y,KAAK8Y,GACd,OAIF,MAAMC,EAAanH,EAAMkH,EAAW3F,MAAM,GAAI,GAAI,MAClD,IAAK2F,EAAWxb,OAASyb,EAAWzb,QAAU,GAAM,EAClD,MAEJ,KAAO,CAEL,MAAM0b,EA3kBd,SAA4BvG,EAAKwG,GAC/B,IAA2B,IAAvBxG,EAAI9S,QAAQsZ,EAAE,IAChB,OAAQ,EAEV,MAAMnY,EAAI2R,EAAInV,OACd,IAAI4b,EAAQ,EACV9b,EAAI,EACN,KAAOA,EAAI0D,EAAG1D,IACZ,GAAe,OAAXqV,EAAIrV,GACNA,SACK,GAAIqV,EAAIrV,KAAO6b,EAAE,GACtBC,SACK,GAAIzG,EAAIrV,KAAO6b,EAAE,KACtBC,IACIA,EAAQ,GACV,OAAO9b,EAIb,OAAQ,CACV,CAujB+B+b,CAAmB3F,EAAI,GAAI,MAClD,GAAIwF,GAAkB,EAAG,CACvB,MACMI,GADgC,IAAxB5F,EAAI,GAAG7T,QAAQ,KAAa,EAAI,GACtB6T,EAAI,GAAGlW,OAAS0b,EACxCxF,EAAI,GAAKA,EAAI,GAAG7C,UAAU,EAAGqI,GAC7BxF,EAAI,GAAKA,EAAI,GAAG7C,UAAU,EAAGyI,GAASvZ,OACtC2T,EAAI,GAAK,EACX,CACF,CACA,IAAIlC,EAAOkC,EAAI,GACXI,EAAQ,GACZ,GAAIQ,KAAKD,QAAQ/E,SAAU,CAEzB,MAAMqE,EAAO,gCAAgCtB,KAAKb,GAE9CmC,IACFnC,EAAOmC,EAAK,GACZG,EAAQH,EAAK,GAEjB,MACEG,EAAQJ,EAAI,GAAKA,EAAI,GAAGL,MAAM,GAAI,GAAK,GAYzC,OATA7B,EAAOA,EAAKzR,OACR,KAAKG,KAAKsR,KAGVA,EAFE8C,KAAKD,QAAQ/E,WAAc,KAAKpP,KAAK8Y,GAEhCxH,EAAK6B,MAAM,GAEX7B,EAAK6B,MAAM,GAAI,IAGnBI,EAAWC,EAAK,CACrBlC,KAAMA,EAAOA,EAAK7R,QAAQ2U,KAAKG,MAAMc,OAAOC,SAAU,MAAQhE,EAC9DsC,MAAOA,EAAQA,EAAMnU,QAAQ2U,KAAKG,MAAMc,OAAOC,SAAU,MAAQ1B,GAChEJ,EAAI,GAAIY,KAAKT,MAClB,CACF,CAEA,OAAA0F,CAAQ/E,EAAKgF,GACX,IAAI9F,EACJ,IAAKA,EAAMY,KAAKG,MAAMc,OAAOgE,QAAQlH,KAAKmC,MAClCd,EAAMY,KAAKG,MAAMc,OAAOkE,OAAOpH,KAAKmC,IAAO,CACjD,IAAIb,GAAQD,EAAI,IAAMA,EAAI,IAAI/T,QAAQ,OAAQ,KAE9C,GADAgU,EAAO6F,EAAM7F,EAAKpU,gBACboU,EAAM,CACT,MAAMhS,EAAO+R,EAAI,GAAGhD,OAAO,GAC3B,MAAO,CACLnC,KAAM,OACNqF,IAAKjS,EACLA,OAEJ,CACA,OAAO8R,EAAWC,EAAKC,EAAMD,EAAI,GAAIY,KAAKT,MAC5C,CACF,CAEA,QAAA6F,CAASlF,EAAKmF,EAAWC,EAAW,IAClC,IAAIna,EAAQ6U,KAAKG,MAAMc,OAAOmE,SAASG,OAAOxH,KAAKmC,GACnD,IAAK/U,EAAO,OAGZ,GAAIA,EAAM,IAAMma,EAASna,MAAM,iBAAkB,OAEjD,MAAMqa,EAAWra,EAAM,IAAMA,EAAM,IAAM,GAEzC,IAAKqa,GAAaA,IAA0B,KAAbF,GAAmBtF,KAAKG,MAAMc,OAAOwE,YAAY1H,KAAKuH,IAAa,CAChG,MAAMI,EAAUva,EAAM,GAAGjC,OAAS,EAClC,IAAIyc,EAAQC,EAASC,EAAaH,EAASI,EAAgB,EAE3D,MAAMC,EAAyB,MAAhB5a,EAAM,GAAG,GAAa6U,KAAKG,MAAMc,OAAOmE,SAASY,UAAYhG,KAAKG,MAAMc,OAAOmE,SAASa,UAMvG,IALAF,EAAOG,UAAY,EAGnBb,EAAYA,EAAUtG,OAAO,EAAImB,EAAIhX,OAASwc,GAEH,OAAnCva,EAAQ4a,EAAOhI,KAAKsH,KAAqB,CAG/C,GAFAM,EAASxa,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAEtEwa,EAAQ,SAIb,GAFAC,EAAUD,EAAOzc,OAEbiC,EAAM,IAAMA,EAAM,GAAI,CACxB0a,GAAcD,EACd,QACF,CAAO,IAAIza,EAAM,IAAMA,EAAM,KACvBua,EAAU,MAAQA,EAAUE,GAAW,GAAI,CAC7CE,GAAiBF,EACjB,QACF,CAKF,GAFAC,GAAcD,EAEVC,EAAa,EAAG,SAGpBD,EAAU3C,KAAKC,IAAI0C,EAASA,EAAUC,EAAaC,GAEnD,MAAMxG,EAAMY,EAAInB,MAAM,EAAG2G,EAAUva,EAAMgb,OAAShb,EAAM,GAAGjC,OAASyc,EAAOzc,QAAU0c,GAGrF,GAAI3C,KAAKC,IAAIwC,EAASE,GAAW,EAAG,CAClC,MAAMvY,EAAOiS,EAAIP,MAAM,GAAI,GAC3B,MAAO,CACL9E,KAAM,KACNqF,MACAjS,OACAuS,OAAQI,KAAKT,MAAMM,aAAaxS,GAEpC,CAGA,MAAMA,EAAOiS,EAAIP,MAAM,GAAI,GAC3B,MAAO,CACL9E,KAAM,SACNqF,MACAjS,OACAuS,OAAQI,KAAKT,MAAMM,aAAaxS,GAEpC,CACF,CACF,CAEA,QAAA+Y,CAASlG,GACP,MAAMd,EAAMY,KAAKG,MAAMc,OAAOX,KAAKvC,KAAKmC,GACxC,GAAId,EAAK,CACP,IAAI/R,EAAO+R,EAAI,GAAG/T,QAAQ,MAAO,KACjC,MAAMgb,EAAmB,OAAOza,KAAKyB,GAC/BiZ,EAA0B,KAAK1a,KAAKyB,IAAS,KAAKzB,KAAKyB,GAK7D,OAJIgZ,GAAoBC,IACtBjZ,EAAOA,EAAKkP,UAAU,EAAGlP,EAAKnE,OAAS,IAEzCmE,EAAO,EAAOA,GAAM,GACb,CACL4M,KAAM,WACNqF,IAAKF,EAAI,GACT/R,OAEJ,CACF,CAEA,EAAAkZ,CAAGrG,GACD,MAAMd,EAAMY,KAAKG,MAAMc,OAAOsF,GAAGxI,KAAKmC,GACtC,GAAId,EACF,MAAO,CACLnF,KAAM,KACNqF,IAAKF,EAAI,GAGf,CAEA,GAAAoH,CAAItG,GACF,MAAMd,EAAMY,KAAKG,MAAMc,OAAOuF,IAAIzI,KAAKmC,GACvC,GAAId,EACF,MAAO,CACLnF,KAAM,MACNqF,IAAKF,EAAI,GACT/R,KAAM+R,EAAI,GACVQ,OAAQI,KAAKT,MAAMM,aAAaT,EAAI,IAG1C,CAEA,QAAAqH,CAASvG,EAAKnF,GACZ,MAAMqE,EAAMY,KAAKG,MAAMc,OAAOwF,SAAS1I,KAAKmC,GAC5C,GAAId,EAAK,CACP,IAAI/R,EAAM6P,EASV,MARe,MAAXkC,EAAI,IACN/R,EAAO,EAAO2S,KAAKD,QAAQhF,OAASA,EAAOqE,EAAI,IAAMA,EAAI,IACzDlC,EAAO,UAAY7P,IAEnBA,EAAO,EAAO+R,EAAI,IAClBlC,EAAO7P,GAGF,CACL4M,KAAM,OACNqF,IAAKF,EAAI,GACT/R,OACA6P,OACA0C,OAAQ,CACN,CACE3F,KAAM,OACNqF,IAAKjS,EACLA,SAIR,CACF,CAEA,GAAAqZ,CAAIxG,EAAKnF,GACP,IAAIqE,EACJ,GAAIA,EAAMY,KAAKG,MAAMc,OAAOyF,IAAI3I,KAAKmC,GAAM,CACzC,IAAI7S,EAAM6P,EACV,GAAe,MAAXkC,EAAI,GACN/R,EAAO,EAAO2S,KAAKD,QAAQhF,OAASA,EAAOqE,EAAI,IAAMA,EAAI,IACzDlC,EAAO,UAAY7P,MACd,CAEL,IAAIsZ,EACJ,GACEA,EAAcvH,EAAI,GAClBA,EAAI,GAAKY,KAAKG,MAAMc,OAAO2F,WAAW7I,KAAKqB,EAAI,IAAI,SAC5CuH,IAAgBvH,EAAI,IAC7B/R,EAAO,EAAO+R,EAAI,IAEhBlC,EADa,SAAXkC,EAAI,GACC,UAAYA,EAAI,GAEhBA,EAAI,EAEf,CACA,MAAO,CACLnF,KAAM,OACNqF,IAAKF,EAAI,GACT/R,OACA6P,OACA0C,OAAQ,CACN,CACE3F,KAAM,OACNqF,IAAKjS,EACLA,SAIR,CACF,CAEA,UAAAwZ,CAAW3G,EAAK9E,GACd,MAAMgE,EAAMY,KAAKG,MAAMc,OAAO5T,KAAK0Q,KAAKmC,GACxC,GAAId,EAAK,CACP,IAAI/R,EAMJ,OAJEA,EADE2S,KAAKT,MAAME,MAAMgF,WACZzE,KAAKD,QAAQpH,SAAYqH,KAAKD,QAAQ7E,UAAY8E,KAAKD,QAAQ7E,UAAUkE,EAAI,IAAM,EAAOA,EAAI,IAAOA,EAAI,GAEzG,EAAOY,KAAKD,QAAQ3E,YAAcA,EAAYgE,EAAI,IAAMA,EAAI,IAE9D,CACLnF,KAAM,OACNqF,IAAKF,EAAI,GACT/R,OAEJ,CACF,EAMF,MAAM+S,EAAQ,CACZC,QAAS,mBACTC,KAAM,uCACNE,OAAQ,8GACRc,GAAI,qEACJH,QAAS,uCACTI,WAAY,0CACZG,KAAM,uCACNzU,KAAM,mdAUN6W,IAAK,kGACL1P,MAAO0J,EACPwG,SAAU,gDAGVwC,WAAY,uFACZzZ,KAAM,UAGR+S,OAAe,8BACfA,OAAe,gEACfA,EAAM0D,IAAMrH,EAAK2D,EAAM0D,KACpBzY,QAAQ,QAAS+U,EAAM2G,QACvB1b,QAAQ,QAAS+U,EAAM4G,QACvBnK,WAEHuD,EAAM6G,OAAS,wBACf7G,EAAM8G,cAAgBzK,EAAK,iBACxBpR,QAAQ,OAAQ+U,EAAM6G,QACtBpK,WAEHuD,EAAMsB,KAAOjF,EAAK2D,EAAMsB,MACrBrW,QAAQ,QAAS+U,EAAM6G,QACvB5b,QAAQ,KAAM,mEACdA,QAAQ,MAAO,UAAY+U,EAAM0D,IAAInI,OAAS,KAC9CkB,WAEHuD,EAAM+G,KAAO,gWAMb/G,EAAMgH,SAAW,+BACjBhH,EAAMnT,KAAOwP,EAAK2D,EAAMnT,KAAM,KAC3B5B,QAAQ,UAAW+U,EAAMgH,UACzB/b,QAAQ,MAAO+U,EAAM+G,MACrB9b,QAAQ,YAAa,4EACrBwR,WAEHuD,EAAMmE,UAAY9H,EAAK2D,EAAM0G,YAC1Bzb,QAAQ,KAAM+U,EAAMkB,IACpBjW,QAAQ,UAAW,iBACnBA,QAAQ,YAAa,IACrBA,QAAQ,SAAU,IAClBA,QAAQ,aAAc,WACtBA,QAAQ,SAAU,kDAClBA,QAAQ,OAAQ,0BAChBA,QAAQ,OAAQ,+DAChBA,QAAQ,MAAO+U,EAAM+G,MACrBtK,WAEHuD,EAAMmB,WAAa9E,EAAK2D,EAAMmB,YAC3BlW,QAAQ,YAAa+U,EAAMmE,WAC3B1H,WAMHuD,EAAMiH,OAAS,IAAKjH,GAMpBA,EAAM1F,IAAM,IACP0F,EAAMiH,OACTjT,MAAO,oKAKTgM,EAAM1F,IAAItG,MAAQqI,EAAK2D,EAAM1F,IAAItG,OAC9B/I,QAAQ,KAAM+U,EAAMkB,IACpBjW,QAAQ,UAAW,iBACnBA,QAAQ,aAAc,WACtBA,QAAQ,OAAQ,cAChBA,QAAQ,SAAU,kDAClBA,QAAQ,OAAQ,0BAChBA,QAAQ,OAAQ,+DAChBA,QAAQ,MAAO+U,EAAM+G,MACrBtK,WAEHuD,EAAM1F,IAAI6J,UAAY9H,EAAK2D,EAAM0G,YAC9Bzb,QAAQ,KAAM+U,EAAMkB,IACpBjW,QAAQ,UAAW,iBACnBA,QAAQ,YAAa,IACrBA,QAAQ,QAAS+U,EAAM1F,IAAItG,OAC3B/I,QAAQ,aAAc,WACtBA,QAAQ,SAAU,kDAClBA,QAAQ,OAAQ,0BAChBA,QAAQ,OAAQ,+DAChBA,QAAQ,MAAO+U,EAAM+G,MACrBtK,WAKHuD,EAAMpF,SAAW,IACZoF,EAAMiH,OACTpa,KAAMwP,EACJ,8IAGCpR,QAAQ,UAAW+U,EAAMgH,UACzB/b,QAAQ,OAAQ,qKAIhBwR,WACHiH,IAAK,oEACL3C,QAAS,yBACTX,OAAQ1C,EACRwG,SAAU,mCACVC,UAAW9H,EAAK2D,EAAMiH,OAAOP,YAC1Bzb,QAAQ,KAAM+U,EAAMkB,IACpBjW,QAAQ,UAAW,mBACnBA,QAAQ,WAAY+U,EAAMkE,UAC1BjZ,QAAQ,aAAc,WACtBA,QAAQ,UAAW,IACnBA,QAAQ,QAAS,IACjBA,QAAQ,QAAS,IACjBwR,YAML,MAAMoE,EAAS,CACbuD,OAAQ,8CACRiC,SAAU,sCACVC,IAAK5I,EACLtE,IAAK,2JAML6F,KAAM,gDACN4F,QAAS,0BACTE,OAAQ,wBACRmC,cAAe,wBACflC,SAAU,CACRG,OAAQ,2DAGRS,UAAW,6RACXC,UAAW,kPAEb3F,KAAM,sCACNiG,GAAI,wBACJC,IAAK1I,EACLzQ,KAAM,8EACNoY,YAAa,sBAsIf,SAASrK,EAAY/N,GACnB,OAAOA,EAEJhC,QAAQ,OAAQ,KAEhBA,QAAQ,MAAO,KAEfA,QAAQ,0BAA2B,OAEnCA,QAAQ,KAAM,KAEdA,QAAQ,+BAAgC,OAExCA,QAAQ,KAAM,KAEdA,QAAQ,SAAU,IACvB,CAMA,SAAS0P,EAAO1N,GACd,IACErE,EACAgT,EAFEuL,EAAM,GAIV,MAAM7a,EAAIW,EAAKnE,OACf,IAAKF,EAAI,EAAGA,EAAI0D,EAAG1D,IACjBgT,EAAK3O,EAAKma,WAAWxe,GACjBia,KAAKwE,SAAW,KAClBzL,EAAK,IAAMA,EAAGjD,SAAS,KAEzBwO,GAAO,KAAOvL,EAAK,IAGrB,OAAOuL,CACT,CAtKAtG,EAAOyG,aAAe,uCACtBzG,EAAOwE,YAAchJ,EAAKwE,EAAOwE,aAAapa,QAAQ,eAAgB4V,EAAOyG,cAAc7K,WAG3FoE,EAAO0G,UAAY,4CAGnB1G,EAAO2G,YAAc,8BAErB3G,EAAOmG,SAAW3K,EAAK2D,EAAMgH,UAAU/b,QAAQ,eAAa,UAAOwR,WAEnEoE,EAAOmE,SAASG,OAAS9I,EAAKwE,EAAOmE,SAASG,QAC3Cla,QAAQ,SAAU4V,EAAOyG,cACzB7K,WAEHoE,EAAOmE,SAASY,UAAYvJ,EAAKwE,EAAOmE,SAASY,UAAW,KACzD3a,QAAQ,SAAU4V,EAAOyG,cACzB7K,WAEHoE,EAAOmE,SAASa,UAAYxJ,EAAKwE,EAAOmE,SAASa,UAAW,KACzD5a,QAAQ,SAAU4V,EAAOyG,cACzB7K,WAEHoE,EAAOC,SAAW,8CAElBD,EAAO4G,QAAU,+BACjB5G,EAAO6G,OAAS,+IAChB7G,EAAOwF,SAAWhK,EAAKwE,EAAOwF,UAC3Bpb,QAAQ,SAAU4V,EAAO4G,SACzBxc,QAAQ,QAAS4V,EAAO6G,QACxBjL,WAEHoE,EAAO8G,WAAa,8EAEpB9G,EAAOzH,IAAMiD,EAAKwE,EAAOzH,KACtBnO,QAAQ,UAAW4V,EAAOmG,UAC1B/b,QAAQ,YAAa4V,EAAO8G,YAC5BlL,WAEHoE,EAAO8F,OAAS,sDAChB9F,EAAO+G,MAAQ,uCACf/G,EAAO+F,OAAS,8DAEhB/F,EAAO5B,KAAO5C,EAAKwE,EAAO5B,MACvBhU,QAAQ,QAAS4V,EAAO8F,QACxB1b,QAAQ,OAAQ4V,EAAO+G,OACvB3c,QAAQ,QAAS4V,EAAO+F,QACxBnK,WAEHoE,EAAOgE,QAAUxI,EAAKwE,EAAOgE,SAC1B5Z,QAAQ,QAAS4V,EAAO8F,QACxB1b,QAAQ,MAAO+U,EAAM2G,QACrBlK,WAEHoE,EAAOkE,OAAS1I,EAAKwE,EAAOkE,QACzB9Z,QAAQ,MAAO+U,EAAM2G,QACrBlK,WAEHoE,EAAOqG,cAAgB7K,EAAKwE,EAAOqG,cAAe,KAC/Cjc,QAAQ,UAAW4V,EAAOgE,SAC1B5Z,QAAQ,SAAU4V,EAAOkE,QACzBtI,WAMHoE,EAAOoG,OAAS,IAAKpG,GAMrBA,EAAOjG,SAAW,IACbiG,EAAOoG,OACVY,OAAQ,CACNzF,MAAO,WACP0F,OAAQ,iEACRC,OAAQ,cACRC,OAAQ,YAEVC,GAAI,CACF7F,MAAO,QACP0F,OAAQ,6DACRC,OAAQ,YACRC,OAAQ,WAEV/I,KAAM5C,EAAK,2BACRpR,QAAQ,QAAS4V,EAAO8F,QACxBlK,WACHoI,QAASxI,EAAK,iCACXpR,QAAQ,QAAS4V,EAAO8F,QACxBlK,YAOLoE,EAAOvG,IAAM,IACRuG,EAAOoG,OACV7C,OAAQ/H,EAAKwE,EAAOuD,QAAQnZ,QAAQ,KAAM,QAAQwR,WAClDyL,gBAAiB,4EACjB5B,IAAK,mEACLE,WAAY,6EACZJ,IAAK,+CACLnZ,KAAM,8NAGR4T,EAAOvG,IAAIgM,IAAMjK,EAAKwE,EAAOvG,IAAIgM,IAAK,KACnCrb,QAAQ,QAAS4V,EAAOvG,IAAI4N,iBAC5BzL,WAKHoE,EAAOzG,OAAS,IACXyG,EAAOvG,IACV6L,GAAI9J,EAAKwE,EAAOsF,IAAIlb,QAAQ,OAAQ,KAAKwR,WACzCxP,KAAMoP,EAAKwE,EAAOvG,IAAIrN,MACnBhC,QAAQ,OAAQ,iBAChBA,QAAQ,UAAW,KACnBwR,YAiDL,MAAM0L,EACJ,WAAAla,CAAY0R,GACVC,KAAKJ,OAAS,GACdI,KAAKJ,OAAOsF,MAAQ7b,OAAOK,OAAO,MAClCsW,KAAKD,QAAUA,GAAWvE,EAC1BwE,KAAKD,QAAQ1E,UAAY2E,KAAKD,QAAQ1E,WAAa,IAAIyE,EACvDE,KAAK3E,UAAY2E,KAAKD,QAAQ1E,UAC9B2E,KAAK3E,UAAU0E,QAAUC,KAAKD,QAC9BC,KAAK3E,UAAUkE,MAAQS,KACvBA,KAAKwI,YAAc,GACnBxI,KAAKP,MAAQ,CACXC,QAAQ,EACR+E,YAAY,EACZjD,KAAK,GAGP,MAAMrB,EAAQ,CACZC,MAAOA,EAAMiH,OACbpG,OAAQA,EAAOoG,QAGbrH,KAAKD,QAAQ/E,UACfmF,EAAMC,MAAQA,EAAMpF,SACpBmF,EAAMc,OAASA,EAAOjG,UACbgF,KAAKD,QAAQrF,MACtByF,EAAMC,MAAQA,EAAM1F,IAChBsF,KAAKD,QAAQvF,OACf2F,EAAMc,OAASA,EAAOzG,OAEtB2F,EAAMc,OAASA,EAAOvG,KAG1BsF,KAAK3E,UAAU8E,MAAQA,CACzB,CAKA,gBAAWA,GACT,MAAO,CACLC,QACAa,SAEJ,CAKA,UAAOwH,CAAIvI,EAAKH,GAEd,OADc,IAAIwI,EAAMxI,GACX0I,IAAIvI,EACnB,CAKA,gBAAOwI,CAAUxI,EAAKH,GAEpB,OADc,IAAIwI,EAAMxI,GACXF,aAAaK,EAC5B,CAKA,GAAAuI,CAAIvI,GAMF,IAAIyI,EACJ,IANAzI,EAAMA,EACH7U,QAAQ,WAAY,MAEvB2U,KAAKyB,YAAYvB,EAAKF,KAAKJ,QAGpB+I,EAAO3I,KAAKwI,YAAY/J,SAC7BuB,KAAKH,aAAa8I,EAAKzI,IAAKyI,EAAK/I,QAGnC,OAAOI,KAAKJ,MACd,CAKA,WAAA6B,CAAYvB,EAAKN,EAAS,IASxB,IAAID,EAAOiJ,EAAWC,EAAQC,EAE9B,IATE5I,EADEF,KAAKD,QAAQ/E,SACTkF,EAAI7U,QAAQ,MAAO,QAAQA,QAAQ,SAAU,IAE7C6U,EAAI7U,QAAQ,gBAAgB,CAACgE,EAAG0Z,EAASC,IACtCD,EAAU,OAAOlG,OAAOmG,EAAK9f,UAMjCgX,GACL,KAAIF,KAAKD,QAAQtF,YACZuF,KAAKD,QAAQtF,WAAW2F,OACxBJ,KAAKD,QAAQtF,WAAW2F,MAAMwD,MAAMqF,MACjCtJ,EAAQsJ,EAAapT,KAAK,CAAE0J,MAAOS,MAAQE,EAAKN,MAClDM,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,IACL,MAQb,GAAIA,EAAQK,KAAK3E,UAAU4E,MAAMC,GAC/BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QACL,IAArByW,EAAML,IAAIpW,QAAgB0W,EAAO1W,OAAS,EAG5C0W,EAAOA,EAAO1W,OAAS,GAAGoW,KAAO,KAEjCM,EAAO9U,KAAK6U,QAMhB,GAAIA,EAAQK,KAAK3E,UAAUiF,KAAKJ,GAC9BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0f,EAAYhJ,EAAOA,EAAO1W,OAAS,IAE/B0f,GAAiC,cAAnBA,EAAU3O,MAA2C,SAAnB2O,EAAU3O,KAK5D2F,EAAO9U,KAAK6U,IAJZiJ,EAAUtJ,KAAO,KAAOK,EAAML,IAC9BsJ,EAAUvb,MAAQ,KAAOsS,EAAMtS,KAC/B2S,KAAKwI,YAAYxI,KAAKwI,YAAYtf,OAAS,GAAGgX,IAAM0I,EAAUvb,WAQlE,GAAIsS,EAAQK,KAAK3E,UAAUmF,OAAON,GAChCA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAU8F,QAAQjB,GACjCA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAUiG,GAAGpB,GAC5BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAUkG,WAAWrB,GACpCA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAUqG,KAAKxB,GAC9BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAUpO,KAAKiT,GAC9BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAUyI,IAAI5D,GAC7BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0f,EAAYhJ,EAAOA,EAAO1W,OAAS,IAC/B0f,GAAiC,cAAnBA,EAAU3O,MAA2C,SAAnB2O,EAAU3O,KAIlD+F,KAAKJ,OAAOsF,MAAMvF,EAAMnG,OAClCwG,KAAKJ,OAAOsF,MAAMvF,EAAMnG,KAAO,CAC7B0D,KAAMyC,EAAMzC,KACZsC,MAAOG,EAAMH,SANfoJ,EAAUtJ,KAAO,KAAOK,EAAML,IAC9BsJ,EAAUvb,MAAQ,KAAOsS,EAAML,IAC/BU,KAAKwI,YAAYxI,KAAKwI,YAAYtf,OAAS,GAAGgX,IAAM0I,EAAUvb,WAWlE,GAAIsS,EAAQK,KAAK3E,UAAUjH,MAAM8L,GAC/BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAUiJ,SAASpE,GAClCA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,OAFd,CASA,GADAkJ,EAAS3I,EACLF,KAAKD,QAAQtF,YAAcuF,KAAKD,QAAQtF,WAAWyO,WAAY,CACjE,IAAIC,EAAaC,IACjB,MAAMC,EAAUnJ,EAAInB,MAAM,GAC1B,IAAIuK,EACJtJ,KAAKD,QAAQtF,WAAWyO,WAAWxe,SAAQ,SAAS6e,GAClDD,EAAYC,EAAc1T,KAAK,CAAE0J,MAAOS,MAAQqJ,GACvB,iBAAdC,GAA0BA,GAAa,IAAKH,EAAalG,KAAKC,IAAIiG,EAAYG,GAC3F,IACIH,EAAaC,KAAYD,GAAc,IACzCN,EAAS3I,EAAI3D,UAAU,EAAG4M,EAAa,GAE3C,CACA,GAAInJ,KAAKP,MAAM+B,MAAQ7B,EAAQK,KAAK3E,UAAUkJ,UAAUsE,IACtDD,EAAYhJ,EAAOA,EAAO1W,OAAS,GAC/B4f,GAA2C,cAAnBF,EAAU3O,MACpC2O,EAAUtJ,KAAO,KAAOK,EAAML,IAC9BsJ,EAAUvb,MAAQ,KAAOsS,EAAMtS,KAC/B2S,KAAKwI,YAAY5d,MACjBoV,KAAKwI,YAAYxI,KAAKwI,YAAYtf,OAAS,GAAGgX,IAAM0I,EAAUvb,MAE9DuS,EAAO9U,KAAK6U,GAEdmJ,EAAwBD,EAAO3f,SAAWgX,EAAIhX,OAC9CgX,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,aAKhC,GAAIyW,EAAQK,KAAK3E,UAAUhO,KAAK6S,GAC9BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0f,EAAYhJ,EAAOA,EAAO1W,OAAS,GAC/B0f,GAAgC,SAAnBA,EAAU3O,MACzB2O,EAAUtJ,KAAO,KAAOK,EAAML,IAC9BsJ,EAAUvb,MAAQ,KAAOsS,EAAMtS,KAC/B2S,KAAKwI,YAAY5d,MACjBoV,KAAKwI,YAAYxI,KAAKwI,YAAYtf,OAAS,GAAGgX,IAAM0I,EAAUvb,MAE9DuS,EAAO9U,KAAK6U,QAKhB,GAAIO,EAAK,CACP,MAAMsJ,EAAS,0BAA4BtJ,EAAIsH,WAAW,GAC1D,GAAIxH,KAAKD,QAAQ5E,OAAQ,CACvB7L,QAAQma,MAAMD,GACd,KACF,CACE,MAAM,IAAIE,MAAMF,EAEpB,CAvDA,CA2DF,OADAxJ,KAAKP,MAAM+B,KAAM,EACV5B,CACT,CAEA,MAAAqB,CAAOf,EAAKN,EAAS,IAEnB,OADAI,KAAKwI,YAAY1d,KAAK,CAAEoV,MAAKN,WACtBA,CACT,CAKA,YAAAC,CAAaK,EAAKN,EAAS,IACzB,IAAID,EAAOiJ,EAAWC,EAIlB1d,EACAwe,EAAcrE,EAFdD,EAAYnF,EAKhB,GAAIF,KAAKJ,OAAOsF,MAAO,CACrB,MAAMA,EAAQ7b,OAAOugB,KAAK5J,KAAKJ,OAAOsF,OACtC,GAAIA,EAAMhc,OAAS,EACjB,KAA8E,OAAtEiC,EAAQ6U,KAAK3E,UAAU8E,MAAMc,OAAOqG,cAAcvJ,KAAKsH,KACzDH,EAAM2E,SAAS1e,EAAM,GAAG4T,MAAM5T,EAAM,GAAG2e,YAAY,KAAO,GAAI,MAChEzE,EAAYA,EAAUtG,MAAM,EAAG5T,EAAMgb,OAAS,IAAMnH,EAAa,IAAK7T,EAAM,GAAGjC,OAAS,GAAK,IAAMmc,EAAUtG,MAAMiB,KAAK3E,UAAU8E,MAAMc,OAAOqG,cAAcpB,WAIrK,CAEA,KAA0E,OAAlE/a,EAAQ6U,KAAK3E,UAAU8E,MAAMc,OAAO0G,UAAU5J,KAAKsH,KACzDA,EAAYA,EAAUtG,MAAM,EAAG5T,EAAMgb,OAAS,IAAMnH,EAAa,IAAK7T,EAAM,GAAGjC,OAAS,GAAK,IAAMmc,EAAUtG,MAAMiB,KAAK3E,UAAU8E,MAAMc,OAAO0G,UAAUzB,WAI3J,KAA4E,OAApE/a,EAAQ6U,KAAK3E,UAAU8E,MAAMc,OAAO2G,YAAY7J,KAAKsH,KAC3DA,EAAYA,EAAUtG,MAAM,EAAG5T,EAAMgb,MAAQhb,EAAM,GAAGjC,OAAS,GAAK,KAAOmc,EAAUtG,MAAMiB,KAAK3E,UAAU8E,MAAMc,OAAO2G,YAAY1B,WACnIlG,KAAK3E,UAAU8E,MAAMc,OAAO2G,YAAY1B,YAG1C,KAAOhG,GAOL,GANKyJ,IACHrE,EAAW,IAEbqE,GAAe,IAGX3J,KAAKD,QAAQtF,YACZuF,KAAKD,QAAQtF,WAAWwG,QACxBjB,KAAKD,QAAQtF,WAAWwG,OAAO2C,MAAMqF,MAClCtJ,EAAQsJ,EAAapT,KAAK,CAAE0J,MAAOS,MAAQE,EAAKN,MAClDM,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,IACL,MAQb,GAAIA,EAAQK,KAAK3E,UAAUmJ,OAAOtE,GAChCA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAU7B,IAAI0G,GAC7BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0f,EAAYhJ,EAAOA,EAAO1W,OAAS,GAC/B0f,GAA4B,SAAfjJ,EAAM1F,MAAsC,SAAnB2O,EAAU3O,MAClD2O,EAAUtJ,KAAOK,EAAML,IACvBsJ,EAAUvb,MAAQsS,EAAMtS,MAExBuS,EAAO9U,KAAK6U,QAMhB,GAAIA,EAAQK,KAAK3E,UAAUgE,KAAKa,GAC9BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAU4J,QAAQ/E,EAAKF,KAAKJ,OAAOsF,OAClDhF,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0f,EAAYhJ,EAAOA,EAAO1W,OAAS,GAC/B0f,GAA4B,SAAfjJ,EAAM1F,MAAsC,SAAnB2O,EAAU3O,MAClD2O,EAAUtJ,KAAOK,EAAML,IACvBsJ,EAAUvb,MAAQsS,EAAMtS,MAExBuS,EAAO9U,KAAK6U,QAMhB,GAAIA,EAAQK,KAAK3E,UAAU+J,SAASlF,EAAKmF,EAAWC,GAClDpF,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAU+K,SAASlG,GAClCA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAUkL,GAAGrG,GAC5BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAUmL,IAAItG,GAC7BA,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAIA,EAAQK,KAAK3E,UAAUoL,SAASvG,EAAKnF,GACvCmF,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,QAKd,GAAKK,KAAKP,MAAMC,UAAWC,EAAQK,KAAK3E,UAAUqL,IAAIxG,EAAKnF,IAA3D,CASA,GADA8N,EAAS3I,EACLF,KAAKD,QAAQtF,YAAcuF,KAAKD,QAAQtF,WAAWsP,YAAa,CAClE,IAAIZ,EAAaC,IACjB,MAAMC,EAAUnJ,EAAInB,MAAM,GAC1B,IAAIuK,EACJtJ,KAAKD,QAAQtF,WAAWsP,YAAYrf,SAAQ,SAAS6e,GACnDD,EAAYC,EAAc1T,KAAK,CAAE0J,MAAOS,MAAQqJ,GACvB,iBAAdC,GAA0BA,GAAa,IAAKH,EAAalG,KAAKC,IAAIiG,EAAYG,GAC3F,IACIH,EAAaC,KAAYD,GAAc,IACzCN,EAAS3I,EAAI3D,UAAU,EAAG4M,EAAa,GAE3C,CACA,GAAIxJ,EAAQK,KAAK3E,UAAUwL,WAAWgC,EAAQzN,GAC5C8E,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QACF,MAAxByW,EAAML,IAAIP,OAAO,KACnBuG,EAAW3F,EAAML,IAAIP,OAAO,IAE9B4K,GAAe,EACff,EAAYhJ,EAAOA,EAAO1W,OAAS,GAC/B0f,GAAgC,SAAnBA,EAAU3O,MACzB2O,EAAUtJ,KAAOK,EAAML,IACvBsJ,EAAUvb,MAAQsS,EAAMtS,MAExBuS,EAAO9U,KAAK6U,QAKhB,GAAIO,EAAK,CACP,MAAMsJ,EAAS,0BAA4BtJ,EAAIsH,WAAW,GAC1D,GAAIxH,KAAKD,QAAQ5E,OAAQ,CACvB7L,QAAQma,MAAMD,GACd,KACF,CACE,MAAM,IAAIE,MAAMF,EAEpB,CAzCA,MAHEtJ,EAAMA,EAAI3D,UAAUoD,EAAML,IAAIpW,QAC9B0W,EAAO9U,KAAK6U,GA8ChB,OAAOC,CACT,EAMF,MAAMoK,EACJ,WAAA3b,CAAY0R,GACVC,KAAKD,QAAUA,GAAWvE,CAC5B,CAEA,IAAA8E,CAAKA,EAAM2J,EAAY3L,GACrB,MAAM0C,GAAQiJ,GAAc,IAAI9e,MAAM,OAAO,GAC7C,GAAI6U,KAAKD,QAAQlF,UAAW,CAC1B,MAAM0M,EAAMvH,KAAKD,QAAQlF,UAAUyF,EAAMU,GAC9B,MAAPuG,GAAeA,IAAQjH,IACzBhC,GAAU,EACVgC,EAAOiH,EAEX,CAIA,OAFAjH,EAAOA,EAAKjV,QAAQ,MAAO,IAAM,KAE5B2V,EAME,qBACHhB,KAAKD,QAAQjF,WACb,EAAOkG,GACP,MACC1C,EAAUgC,EAAO,EAAOA,GAAM,IAC/B,kBAVK,eACFhC,EAAUgC,EAAO,EAAOA,GAAM,IAC/B,iBASR,CAKA,UAAAiB,CAAW2I,GACT,MAAO,iBAAiBA,kBAC1B,CAEA,IAAAjd,CAAKA,GACH,OAAOA,CACT,CAQA,OAAAkU,CAAQ9T,EAAMyX,EAAOxF,EAAK6K,GACxB,GAAInK,KAAKD,QAAQpF,UAAW,CAE1B,MAAO,KAAKmK,SADD9E,KAAKD,QAAQnF,aAAeuP,EAAQC,KAAK9K,OACpBjS,OAAUyX,MAC5C,CAGA,MAAO,KAAKA,KAASzX,OAAUyX,MACjC,CAEA,EAAAxD,GACE,OAAOtB,KAAKD,QAAQxE,MAAQ,UAAY,QAC1C,CAEA,IAAAmG,CAAKlM,EAAM+M,EAASC,GAClB,MAAMvI,EAAOsI,EAAU,KAAO,KAE9B,MAAO,IAAMtI,GADCsI,GAAqB,IAAVC,EAAgB,WAAaA,EAAQ,IAAO,IACtC,MAAQhN,EAAO,KAAOyE,EAAO,KAC9D,CAKA,QAAAoQ,CAAShd,GACP,MAAO,OAAOA,UAChB,CAEA,QAAAid,CAAS/G,GACP,MAAO,WACFA,EAAU,cAAgB,IAC3B,+BACCvD,KAAKD,QAAQxE,MAAQ,KAAO,IAC7B,IACN,CAKA,SAAAgJ,CAAUlX,GACR,MAAO,MAAMA,SACf,CAMA,KAAA+G,CAAM4P,EAAQxO,GAGZ,OAFIA,IAAMA,EAAO,UAAUA,aAEpB,qBAEHwO,EACA,aACAxO,EACA,YACN,CAKA,QAAA+U,CAAS1Z,GACP,MAAO,SAASA,UAClB,CAEA,SAAA2Z,CAAU3Z,EAAS4Z,GACjB,MAAMxQ,EAAOwQ,EAAMzG,OAAS,KAAO,KAInC,OAHYyG,EAAMxG,MACd,IAAIhK,YAAewQ,EAAMxG,UACzB,IAAIhK,MACKpJ,EAAU,KAAKoJ,MAC9B,CAMA,MAAAgO,CAAO5a,GACL,MAAO,WAAWA,YACpB,CAKA,EAAAgb,CAAGhb,GACD,MAAO,OAAOA,QAChB,CAKA,QAAA+Y,CAAS/Y,GACP,MAAO,SAASA,UAClB,CAEA,EAAAkZ,GACE,OAAOvG,KAAKD,QAAQxE,MAAQ,QAAU,MACxC,CAKA,GAAAiL,CAAInZ,GACF,MAAO,QAAQA,SACjB,CAOA,IAAAgS,CAAKnC,EAAMsC,EAAOnS,GAEhB,GAAa,QADb6P,EAAOF,EAASgD,KAAKD,QAAQpH,SAAUqH,KAAKD,QAAQxF,QAAS2C,IAE3D,OAAO7P,EAET,IAAIka,EAAM,YAAcrK,EAAO,IAK/B,OAJIsC,IACF+H,GAAO,WAAa/H,EAAQ,KAE9B+H,GAAO,IAAMla,EAAO,OACbka,CACT,CAOA,KAAAmD,CAAMxN,EAAMsC,EAAOnS,GAEjB,GAAa,QADb6P,EAAOF,EAASgD,KAAKD,QAAQpH,SAAUqH,KAAKD,QAAQxF,QAAS2C,IAE3D,OAAO7P,EAGT,IAAIka,EAAM,aAAarK,WAAc7P,KAKrC,OAJImS,IACF+H,GAAO,WAAW/H,MAEpB+H,GAAOvH,KAAKD,QAAQxE,MAAQ,KAAO,IAC5BgM,CACT,CAEA,IAAAla,CAAKA,GACH,OAAOA,CACT,EAOF,MAAMsd,EAEJ,MAAA1C,CAAO5a,GACL,OAAOA,CACT,CAEA,EAAAgb,CAAGhb,GACD,OAAOA,CACT,CAEA,QAAA+Y,CAAS/Y,GACP,OAAOA,CACT,CAEA,GAAAmZ,CAAInZ,GACF,OAAOA,CACT,CAEA,IAAAJ,CAAKI,GACH,OAAOA,CACT,CAEA,IAAAA,CAAKA,GACH,OAAOA,CACT,CAEA,IAAAgS,CAAKnC,EAAMsC,EAAOnS,GAChB,MAAO,GAAKA,CACd,CAEA,KAAAqd,CAAMxN,EAAMsC,EAAOnS,GACjB,MAAO,GAAKA,CACd,CAEA,EAAAkZ,GACE,MAAO,EACT,EAMF,MAAMqE,EACJ,WAAAvc,GACE2R,KAAK6K,KAAO,CAAC,CACf,CAKA,SAAAC,CAAUnT,GACR,OAAOA,EACJ1M,cACAQ,OAEAJ,QAAQ,kBAAmB,IAE3BA,QAAQ,gEAAiE,IACzEA,QAAQ,MAAO,IACpB,CAOA,eAAA0f,CAAgBC,EAAcC,GAC5B,IAAIb,EAAOY,EACPE,EAAuB,EAC3B,GAAIlL,KAAK6K,KAAKzhB,eAAeghB,GAAO,CAClCc,EAAuBlL,KAAK6K,KAAKG,GACjC,GACEE,IACAd,EAAOY,EAAe,IAAME,QACrBlL,KAAK6K,KAAKzhB,eAAeghB,GACpC,CAKA,OAJKa,IACHjL,KAAK6K,KAAKG,GAAgBE,EAC1BlL,KAAK6K,KAAKT,GAAQ,GAEbA,CACT,CAQA,IAAAA,CAAKzS,EAAOoI,EAAU,CAAC,GACrB,MAAMqK,EAAOpK,KAAK8K,UAAUnT,GAC5B,OAAOqI,KAAK+K,gBAAgBX,EAAMrK,EAAQoL,OAC5C,EAMF,MAAMC,EACJ,WAAA/c,CAAY0R,GACVC,KAAKD,QAAUA,GAAWvE,EAC1BwE,KAAKD,QAAQ9E,SAAW+E,KAAKD,QAAQ9E,UAAY,IAAI+O,EACrDhK,KAAK/E,SAAW+E,KAAKD,QAAQ9E,SAC7B+E,KAAK/E,SAAS8E,QAAUC,KAAKD,QAC7BC,KAAKqL,aAAe,IAAIV,EACxB3K,KAAKmK,QAAU,IAAIS,CACrB,CAKA,YAAOU,CAAM1L,EAAQG,GAEnB,OADe,IAAIqL,EAAOrL,GACZuL,MAAM1L,EACtB,CAKA,kBAAO2L,CAAY3L,EAAQG,GAEzB,OADe,IAAIqL,EAAOrL,GACZwL,YAAY3L,EAC5B,CAKA,KAAA0L,CAAM1L,EAAQ4B,GAAM,GAClB,IACExY,EACAmb,EACAC,EACAoH,EACAC,EACApH,EACAqH,EACA1H,EACAxO,EACAmK,EACA4C,EACAC,EACAC,EACAkJ,EACA5H,EACAR,EACAD,EACAgH,EACAsB,EAnBErE,EAAM,GAqBV,MAAM7a,EAAIkT,EAAO1W,OACjB,IAAKF,EAAI,EAAGA,EAAI0D,EAAG1D,IAIjB,GAHA2W,EAAQC,EAAO5W,GAGXgX,KAAKD,QAAQtF,YAAcuF,KAAKD,QAAQtF,WAAWoR,WAAa7L,KAAKD,QAAQtF,WAAWoR,UAAUlM,EAAM1F,QAC1G2R,EAAM5L,KAAKD,QAAQtF,WAAWoR,UAAUlM,EAAM1F,MAAMpE,KAAK,CAAEiW,OAAQ9L,MAAQL,IAC/D,IAARiM,IAAkB,CAAC,QAAS,KAAM,UAAW,OAAQ,QAAS,aAAc,OAAQ,OAAQ,YAAa,QAAQ/B,SAASlK,EAAM1F,OAClIsN,GAAOqE,GAAO,QAKlB,OAAQjM,EAAM1F,MACZ,IAAK,QACH,SAEF,IAAK,KACHsN,GAAOvH,KAAK/E,SAASqG,KACrB,SAEF,IAAK,UACHiG,GAAOvH,KAAK/E,SAASkG,QACnBnB,KAAKuL,YAAY5L,EAAMC,QACvBD,EAAM0B,MACN,EAASrB,KAAKuL,YAAY5L,EAAMC,OAAQI,KAAKqL,eAC7CrL,KAAKmK,SACP,SAEF,IAAK,OACH5C,GAAOvH,KAAK/E,SAASqF,KAAKX,EAAMtS,KAC9BsS,EAAMqB,KACNrB,EAAMrB,SACR,SAEF,IAAK,QAMH,IALA0F,EAAS,GAGT0H,EAAO,GACPF,EAAK7L,EAAMqE,OAAO9a,OACbib,EAAI,EAAGA,EAAIqH,EAAIrH,IAClBuH,GAAQ1L,KAAK/E,SAASuP,UACpBxK,KAAKuL,YAAY5L,EAAMqE,OAAOG,GAAGvE,QACjC,CAAEoE,QAAQ,EAAMC,MAAOtE,EAAMsE,MAAME,KAOvC,IAJAH,GAAUhE,KAAK/E,SAASsP,SAASmB,GAEjClW,EAAO,GACPgW,EAAK7L,EAAMuE,KAAKhb,OACXib,EAAI,EAAGA,EAAIqH,EAAIrH,IAAK,CAKvB,IAJAE,EAAM1E,EAAMuE,KAAKC,GAEjBuH,EAAO,GACPD,EAAKpH,EAAInb,OACJkb,EAAI,EAAGA,EAAIqH,EAAIrH,IAClBsH,GAAQ1L,KAAK/E,SAASuP,UACpBxK,KAAKuL,YAAYlH,EAAID,GAAGxE,QACxB,CAAEoE,QAAQ,EAAOC,MAAOtE,EAAMsE,MAAMG,KAIxC5O,GAAQwK,KAAK/E,SAASsP,SAASmB,EACjC,CACAnE,GAAOvH,KAAK/E,SAAS7G,MAAM4P,EAAQxO,GACnC,SAEF,IAAK,aACHA,EAAOwK,KAAKsL,MAAM3L,EAAMC,QACxB2H,GAAOvH,KAAK/E,SAASsG,WAAW/L,GAChC,SAEF,IAAK,OAOH,IANA+M,EAAU5C,EAAM4C,QAChBC,EAAQ7C,EAAM6C,MACdC,EAAQ9C,EAAM8C,MACd+I,EAAK7L,EAAM+C,MAAMxZ,OAEjBsM,EAAO,GACF2O,EAAI,EAAGA,EAAIqH,EAAIrH,IAClBJ,EAAOpE,EAAM+C,MAAMyB,GACnBZ,EAAUQ,EAAKR,QACfD,EAAOS,EAAKT,KAEZqI,EAAW,GACP5H,EAAKT,OACPgH,EAAWtK,KAAK/E,SAASqP,SAAS/G,GAC9Bd,EACEsB,EAAKnE,OAAO1W,OAAS,GAA6B,cAAxB6a,EAAKnE,OAAO,GAAG3F,MAC3C8J,EAAKnE,OAAO,GAAGvS,KAAOid,EAAW,IAAMvG,EAAKnE,OAAO,GAAGvS,KAClD0W,EAAKnE,OAAO,GAAGA,QAAUmE,EAAKnE,OAAO,GAAGA,OAAO1W,OAAS,GAAuC,SAAlC6a,EAAKnE,OAAO,GAAGA,OAAO,GAAG3F,OACxF8J,EAAKnE,OAAO,GAAGA,OAAO,GAAGvS,KAAOid,EAAW,IAAMvG,EAAKnE,OAAO,GAAGA,OAAO,GAAGvS,OAG5E0W,EAAKnE,OAAOmM,QAAQ,CAClB9R,KAAM,OACN5M,KAAMid,IAIVqB,GAAYrB,GAIhBqB,GAAY3L,KAAKsL,MAAMvH,EAAKnE,OAAQ6C,GACpCjN,GAAQwK,KAAK/E,SAASoP,SAASsB,EAAUrI,EAAMC,GAGjDgE,GAAOvH,KAAK/E,SAASyG,KAAKlM,EAAM+M,EAASC,GACzC,SAEF,IAAK,OAEH+E,GAAOvH,KAAK/E,SAAShO,KAAK0S,EAAMtS,MAChC,SAEF,IAAK,YACHka,GAAOvH,KAAK/E,SAASsJ,UAAUvE,KAAKuL,YAAY5L,EAAMC,SACtD,SAEF,IAAK,OAEH,IADApK,EAAOmK,EAAMC,OAASI,KAAKuL,YAAY5L,EAAMC,QAAUD,EAAMtS,KACtDrE,EAAI,EAAI0D,GAA4B,SAAvBkT,EAAO5W,EAAI,GAAGiR,MAChC0F,EAAQC,IAAS5W,GACjBwM,GAAQ,MAAQmK,EAAMC,OAASI,KAAKuL,YAAY5L,EAAMC,QAAUD,EAAMtS,MAExEka,GAAO/F,EAAMxB,KAAK/E,SAASsJ,UAAU/O,GAAQA,EAC7C,SAGF,QAAS,CACP,MAAMgU,EAAS,eAAiB7J,EAAM1F,KAAO,wBAC7C,GAAI+F,KAAKD,QAAQ5E,OAEf,YADA7L,QAAQma,MAAMD,GAGd,MAAM,IAAIE,MAAMF,EAEpB,EAIJ,OAAOjC,CACT,CAKA,WAAAgE,CAAY3L,EAAQ3E,GAClBA,EAAWA,GAAY+E,KAAK/E,SAC5B,IACEjS,EACA2W,EACAiM,EAHErE,EAAM,GAKV,MAAM7a,EAAIkT,EAAO1W,OACjB,IAAKF,EAAI,EAAGA,EAAI0D,EAAG1D,IAIjB,GAHA2W,EAAQC,EAAO5W,GAGXgX,KAAKD,QAAQtF,YAAcuF,KAAKD,QAAQtF,WAAWoR,WAAa7L,KAAKD,QAAQtF,WAAWoR,UAAUlM,EAAM1F,QAC1G2R,EAAM5L,KAAKD,QAAQtF,WAAWoR,UAAUlM,EAAM1F,MAAMpE,KAAK,CAAEiW,OAAQ9L,MAAQL,IAC/D,IAARiM,IAAkB,CAAC,SAAU,OAAQ,OAAQ,QAAS,SAAU,KAAM,WAAY,KAAM,MAAO,QAAQ/B,SAASlK,EAAM1F,OACxHsN,GAAOqE,GAAO,QAKlB,OAAQjM,EAAM1F,MACZ,IAAK,SAoCL,IAAK,OACHsN,GAAOtM,EAAS5N,KAAKsS,EAAMtS,MAC3B,MAlCF,IAAK,OACHka,GAAOtM,EAAShO,KAAK0S,EAAMtS,MAC3B,MAEF,IAAK,OACHka,GAAOtM,EAASoE,KAAKM,EAAMzC,KAAMyC,EAAMH,MAAOQ,KAAKuL,YAAY5L,EAAMC,OAAQ3E,IAC7E,MAEF,IAAK,QACHsM,GAAOtM,EAASyP,MAAM/K,EAAMzC,KAAMyC,EAAMH,MAAOG,EAAMtS,MACrD,MAEF,IAAK,SACHka,GAAOtM,EAASgN,OAAOjI,KAAKuL,YAAY5L,EAAMC,OAAQ3E,IACtD,MAEF,IAAK,KACHsM,GAAOtM,EAASoN,GAAGrI,KAAKuL,YAAY5L,EAAMC,OAAQ3E,IAClD,MAEF,IAAK,WACHsM,GAAOtM,EAASmL,SAASzG,EAAMtS,MAC/B,MAEF,IAAK,KACHka,GAAOtM,EAASsL,KAChB,MAEF,IAAK,MACHgB,GAAOtM,EAASuL,IAAIxG,KAAKuL,YAAY5L,EAAMC,OAAQ3E,IACnD,MAMF,QAAS,CACP,MAAMuO,EAAS,eAAiB7J,EAAM1F,KAAO,wBAC7C,GAAI+F,KAAKD,QAAQ5E,OAEf,YADA7L,QAAQma,MAAMD,GAGd,MAAM,IAAIE,MAAMF,EAEpB,EAGJ,OAAOjC,CACT,EAGF,MAAMyE,EACJ,WAAA3d,CAAY0R,GACVC,KAAKD,QAAUA,GAAWvE,CAC5B,CAEAyQ,wBAA0B,IAAIC,IAAI,CAChC,aACA,gBAMF,UAAAC,CAAWC,GACT,OAAOA,CACT,CAKA,WAAAC,CAAYpf,GACV,OAAOA,CACT,EAgCF,SAASqf,EAAc/M,EAAOuM,GAC5B,MAAO,CAAC5L,EAAKvD,EAAK4P,KACG,mBAAR5P,IACT4P,EAAW5P,EACXA,EAAM,MAGR,MAAM6P,EAAU,IAAK7P,GAEf8P,EAtCV,SAAiBtR,EAAQb,EAAOiS,GAC9B,OAAQlP,IAGN,GAFAA,EAAEqP,SAAW,8DAETvR,EAAQ,CACV,MAAMwR,EAAM,iCACR,EAAOtP,EAAEqP,QAAU,IAAI,GACvB,SACJ,OAAIpS,EACKsS,QAAQC,QAAQF,GAErBJ,OACFA,EAAS,KAAMI,GAGVA,CACT,CAEA,GAAIrS,EACF,OAAOsS,QAAQE,OAAOzP,GAExB,IAAIkP,EAIJ,MAAMlP,EAHJkP,EAASlP,EAGJ,CAEX,CAWuB0P,EADnBpQ,EAAM,IAAKqQ,EAAOxR,YAAagR,IACArR,OAAQwB,EAAIrC,MAAOiS,GAGlD,GAAI,MAAOrM,EACT,OAAOuM,EAAW,IAAI/C,MAAM,mDAE9B,GAAmB,iBAARxJ,EACT,OAAOuM,EAAW,IAAI/C,MAAM,wCACxBrgB,OAAOgB,UAAU0O,SAASlD,KAAKqK,GAAO,sBAS5C,GAjuEJ,SAAkCvD,GAC5BA,GAAOA,EAAIhE,WAAagE,EAAIxB,QAC9B7L,QAAQC,KAAK,0MAEjB,CAutEI0d,CAAyBtQ,GAErBA,EAAIlL,QACNkL,EAAIlL,MAAMsO,QAAUpD,GAGlB4P,EAAU,CACZ,MAAM1R,EAAY8B,EAAI9B,UACtB,IAAI+E,EAEJ,IACMjD,EAAIlL,QACNyO,EAAMvD,EAAIlL,MAAM0a,WAAWjM,IAE7BN,EAASL,EAAMW,EAAKvD,EACtB,CAAE,MAAOU,GACP,OAAOoP,EAAWpP,EACpB,CAEA,MAAM6P,EAAO,SAASC,GACpB,IAAI5F,EAEJ,IAAK4F,EACH,IACMxQ,EAAIrB,YACN0R,EAAO1R,WAAWsE,EAAQjD,EAAIrB,YAEhCiM,EAAMuE,EAAOlM,EAAQjD,GACjBA,EAAIlL,QACN8V,EAAM5K,EAAIlL,MAAM4a,YAAY9E,GAEhC,CAAE,MAAOlK,GACP8P,EAAM9P,CACR,CAKF,OAFAV,EAAI9B,UAAYA,EAETsS,EACHV,EAAWU,GACXZ,EAAS,KAAMhF,EACrB,EAEA,IAAK1M,GAAaA,EAAU3R,OAAS,EACnC,OAAOgkB,IAKT,UAFOvQ,EAAI9B,WAEN+E,EAAO1W,OAAQ,OAAOgkB,IAE3B,IAAIE,EAAU,EA2Bd,OA1BAJ,EAAO1R,WAAWsE,GAAQ,SAASD,GACd,SAAfA,EAAM1F,OACRmT,IACAC,YAAW,KACTxS,EAAU8E,EAAMtS,KAAMsS,EAAMqB,MAAM,SAASmM,EAAK7M,GAC9C,GAAI6M,EACF,OAAOD,EAAKC,GAEF,MAAR7M,GAAgBA,IAASX,EAAMtS,OACjCsS,EAAMtS,KAAOiT,EACbX,EAAMrB,SAAU,GAGlB8O,IACgB,IAAZA,GACFF,GAEJ,GAAE,GACD,GAEP,SAEgB,IAAZE,GACFF,IAIJ,CAEA,GAAIvQ,EAAIrC,MACN,OAAOsS,QAAQC,QAAQlQ,EAAIlL,MAAQkL,EAAIlL,MAAM0a,WAAWjM,GAAOA,GAC5DoN,MAAKpN,GAAOX,EAAMW,EAAKvD,KACvB2Q,MAAK1N,GAAUjD,EAAIrB,WAAasR,QAAQW,IAAIP,EAAO1R,WAAWsE,EAAQjD,EAAIrB,aAAagS,MAAK,IAAM1N,IAAUA,IAC5G0N,MAAK1N,GAAUkM,EAAOlM,EAAQjD,KAC9B2Q,MAAKrgB,GAAQ0P,EAAIlL,MAAQkL,EAAIlL,MAAM4a,YAAYpf,GAAQA,IACvDugB,MAAMf,GAGX,IACM9P,EAAIlL,QACNyO,EAAMvD,EAAIlL,MAAM0a,WAAWjM,IAE7B,MAAMN,EAASL,EAAMW,EAAKvD,GACtBA,EAAIrB,YACN0R,EAAO1R,WAAWsE,EAAQjD,EAAIrB,YAEhC,IAAIrO,EAAO6e,EAAOlM,EAAQjD,GAI1B,OAHIA,EAAIlL,QACNxE,EAAO0P,EAAIlL,MAAM4a,YAAYpf,IAExBA,CACT,CAAE,MAAOoQ,GACP,OAAOoP,EAAWpP,EACpB,EAEJ,CAKA,SAAS2P,EAAO9M,EAAKvD,EAAK4P,GACxB,OAAOD,EAAc/D,EAAME,IAAK2C,EAAOE,MAAhCgB,CAAuCpM,EAAKvD,EAAK4P,EAC1D,CAMAS,EAAOjN,QACPiN,EAAOS,WAAa,SAAS9Q,GAlkF7B,IAAwB+Q,EAqkFtB,OAFAV,EAAOxR,SAAW,IAAKwR,EAAOxR,YAAamB,GAnkFrB+Q,EAokFPV,EAAOxR,SAnkFtBA,EAAWkS,EAokFJV,CACT,EAEAA,EAAO3S,YAAcA,EAErB2S,EAAOxR,SAAWA,EAMlBwR,EAAOW,IAAM,YAAY1jB,GACvB,MAAMwQ,EAAauS,EAAOxR,SAASf,YAAc,CAAEoR,UAAW,CAAC,EAAG+B,YAAa,CAAC,GAEhF3jB,EAAKS,SAASmjB,IAEZ,MAAMC,EAAO,IAAKD,GA2DlB,GAxDAC,EAAKxT,MAAQ0S,EAAOxR,SAASlB,OAASwT,EAAKxT,QAAS,EAGhDuT,EAAKpT,aACPoT,EAAKpT,WAAW/P,SAASqjB,IACvB,IAAKA,EAAInZ,KACP,MAAM,IAAI8U,MAAM,2BAElB,GAAIqE,EAAI9S,SAAU,CAChB,MAAM+S,EAAevT,EAAWoR,UAAUkC,EAAInZ,MAG5C6F,EAAWoR,UAAUkC,EAAInZ,MAFvBoZ,EAE+B,YAAY/jB,GAC3C,IAAI2hB,EAAMmC,EAAI9S,SAASpR,MAAMmW,KAAM/V,GAInC,OAHY,IAAR2hB,IACFA,EAAMoC,EAAankB,MAAMmW,KAAM/V,IAE1B2hB,CACT,EAEiCmC,EAAI9S,QAEzC,CACA,GAAI8S,EAAI1S,UAAW,CACjB,IAAK0S,EAAIjJ,OAAwB,UAAdiJ,EAAIjJ,OAAmC,WAAdiJ,EAAIjJ,MAC9C,MAAM,IAAI4E,MAAM,+CAEdjP,EAAWsT,EAAIjJ,OACjBrK,EAAWsT,EAAIjJ,OAAOiH,QAAQgC,EAAI1S,WAElCZ,EAAWsT,EAAIjJ,OAAS,CAACiJ,EAAI1S,WAE3B0S,EAAIvL,QACY,UAAduL,EAAIjJ,MACFrK,EAAWyO,WACbzO,EAAWyO,WAAWpe,KAAKijB,EAAIvL,OAE/B/H,EAAWyO,WAAa,CAAC6E,EAAIvL,OAER,WAAduL,EAAIjJ,QACTrK,EAAWsP,YACbtP,EAAWsP,YAAYjf,KAAKijB,EAAIvL,OAEhC/H,EAAWsP,YAAc,CAACgE,EAAIvL,QAItC,CACIuL,EAAIH,cACNnT,EAAWmT,YAAYG,EAAInZ,MAAQmZ,EAAIH,YACzC,IAEFE,EAAKrT,WAAaA,GAIhBoT,EAAK5S,SAAU,CACjB,MAAMA,EAAW+R,EAAOxR,SAASP,UAAY,IAAI+O,EACjD,IAAK,MAAMiE,KAAQJ,EAAK5S,SAAU,CAChC,MAAM+S,EAAe/S,EAASgT,GAE9BhT,EAASgT,GAAQ,IAAIhkB,KACnB,IAAI2hB,EAAMiC,EAAK5S,SAASgT,GAAMpkB,MAAMoR,EAAUhR,GAI9C,OAHY,IAAR2hB,IACFA,EAAMoC,EAAankB,MAAMoR,EAAUhR,IAE9B2hB,CAAG,CAEd,CACAkC,EAAK7S,SAAWA,CAClB,CACA,GAAI4S,EAAKxS,UAAW,CAClB,MAAMA,EAAY2R,EAAOxR,SAASH,WAAa,IAAIyE,EACnD,IAAK,MAAMmO,KAAQJ,EAAKxS,UAAW,CACjC,MAAM6S,EAAgB7S,EAAU4S,GAEhC5S,EAAU4S,GAAQ,IAAIhkB,KACpB,IAAI2hB,EAAMiC,EAAKxS,UAAU4S,GAAMpkB,MAAMwR,EAAWpR,GAIhD,OAHY,IAAR2hB,IACFA,EAAMsC,EAAcrkB,MAAMwR,EAAWpR,IAEhC2hB,CAAG,CAEd,CACAkC,EAAKzS,UAAYA,CACnB,CAGA,GAAIwS,EAAKpc,MAAO,CACd,MAAMA,EAAQub,EAAOxR,SAAS/J,OAAS,IAAIua,EAC3C,IAAK,MAAMiC,KAAQJ,EAAKpc,MAAO,CAC7B,MAAM0c,EAAW1c,EAAMwc,GACnBjC,EAAMoC,iBAAiBC,IAAIJ,GAC7Bxc,EAAMwc,GAASK,IACb,GAAItB,EAAOxR,SAASlB,MAClB,OAAOsS,QAAQC,QAAQgB,EAAKpc,MAAMwc,GAAMpY,KAAKpE,EAAO6c,IAAMhB,MAAK1B,GACtDuC,EAAStY,KAAKpE,EAAOma,KAIhC,MAAMA,EAAMiC,EAAKpc,MAAMwc,GAAMpY,KAAKpE,EAAO6c,GACzC,OAAOH,EAAStY,KAAKpE,EAAOma,EAAI,EAGlCna,EAAMwc,GAAQ,IAAIhkB,KAChB,IAAI2hB,EAAMiC,EAAKpc,MAAMwc,GAAMpkB,MAAM4H,EAAOxH,GAIxC,OAHY,IAAR2hB,IACFA,EAAMuC,EAAStkB,MAAM4H,EAAOxH,IAEvB2hB,CAAG,CAGhB,CACAkC,EAAKrc,MAAQA,CACf,CAGA,GAAIoc,EAAKvS,WAAY,CACnB,MAAMA,EAAa0R,EAAOxR,SAASF,WACnCwS,EAAKxS,WAAa,SAASqE,GACzB,IAAI4O,EAAS,GAKb,OAJAA,EAAOzjB,KAAK+iB,EAAKvS,WAAWzF,KAAKmK,KAAML,IACnCrE,IACFiT,EAASA,EAAOhkB,OAAO+Q,EAAWzF,KAAKmK,KAAML,KAExC4O,CACT,CACF,CAEAvB,EAAOS,WAAWK,EAAK,GAE3B,EAMAd,EAAO1R,WAAa,SAASsE,EAAQ2M,GACnC,IAAIgC,EAAS,GACb,IAAK,MAAM5O,KAASC,EAElB,OADA2O,EAASA,EAAOhkB,OAAOgiB,EAAS1W,KAAKmX,EAAQrN,IACrCA,EAAM1F,MACZ,IAAK,QACH,IAAK,MAAMyR,KAAQ/L,EAAMqE,OACvBuK,EAASA,EAAOhkB,OAAOyiB,EAAO1R,WAAWoQ,EAAK9L,OAAQ2M,IAExD,IAAK,MAAMlI,KAAO1E,EAAMuE,KACtB,IAAK,MAAMwH,KAAQrH,EACjBkK,EAASA,EAAOhkB,OAAOyiB,EAAO1R,WAAWoQ,EAAK9L,OAAQ2M,IAG1D,MAEF,IAAK,OACHgC,EAASA,EAAOhkB,OAAOyiB,EAAO1R,WAAWqE,EAAM+C,MAAO6J,IACtD,MAEF,QACMS,EAAOxR,SAASf,YAAcuS,EAAOxR,SAASf,WAAWmT,aAAeZ,EAAOxR,SAASf,WAAWmT,YAAYjO,EAAM1F,MACvH+S,EAAOxR,SAASf,WAAWmT,YAAYjO,EAAM1F,MAAMvP,SAAQ,SAASkjB,GAClEW,EAASA,EAAOhkB,OAAOyiB,EAAO1R,WAAWqE,EAAMiO,GAAcrB,GAC/D,IACS5M,EAAMC,SACf2O,EAASA,EAAOhkB,OAAOyiB,EAAO1R,WAAWqE,EAAMC,OAAQ2M,KAK/D,OAAOgC,CACT,EAMAvB,EAAOzB,YAAce,EAAc/D,EAAMG,UAAW0C,EAAOG,aAK3DyB,EAAO5B,OAASA,EAChB4B,EAAOlB,OAASV,EAAOE,MACvB0B,EAAOhD,SAAWA,EAClBgD,EAAOrC,aAAeA,EACtBqC,EAAOzE,MAAQA,EACfyE,EAAOzN,MAAQgJ,EAAME,IACrBuE,EAAOlN,UAAYA,EACnBkN,EAAOpC,QAAUA,EACjBoC,EAAOhB,MAAQA,EACfgB,EAAO1B,MAAQ0B,EAECA,EAAOjN,QACJiN,EAAOS,WACdT,EAAOW,IACAX,EAAO1R,WACN0R,EAAOzB,YAEZH,EAAOE,MACR/C,EAAME,ICnzFpB,MAf8B+F,IAC5B,MAAM9e,EAA+B,oBAAXlB,OACpBigB,EAAQ,WAAehf,EAEvBkJ,EAAWjJ,EAAYA,EAAUiJ,SAAW,CAACzO,EAAGwkB,IAAMxkB,EAE5D,MAAO,IACFskB,EACHG,YAAahW,EACXqU,EAAOwB,EAAIG,aACX,CAACzc,aAAc,CAAC,KAAM,SAAU,KAAM,KAAM,KAAM,KAAM,IAAK,OAEhE,EC8CH,MArDYvI,IAAc,IAAb,IAAE6kB,GAAK7kB,EAClB,YAAY8F,IAAR+e,GACFlf,QAAQsf,IAAI,kDACL1U,EAAAA,cAAA,WAAK,uBAGdsU,EAAMK,EAAcL,GAElBtU,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAAA,OAAKC,UAAU,UACXqU,EAAIM,QACJN,EAAIM,OAAOnO,KAAKoO,GACd7U,EAAAA,cAAC8U,EAAK,CAACC,IAAKF,EAAO9U,KAAM8U,MAGP,MAAnBP,EAAIU,YACLhV,EAAAA,cAAC8U,EAAK,CAAC/U,KAAK,cAGhBC,EAAAA,cAACiV,EAAAA,GAAI,CAACC,GAAI,QAAQZ,EAAIa,MACpBnV,EAAAA,cAAA,OAAKC,UAAU,SAAUqU,EAAIc,OAAQ,MAAKd,EAAIhP,QAEhDtF,EAAAA,cAAA,OAAKC,UAAU,QACXqU,EAAIe,aACJrV,EAAAA,cAAA,OAAKC,UAAU,eAAc,eAAYD,EAAAA,cAAA,SAAKsU,EAAIe,YAAa,KAAK,UAEtErV,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,SAAKsU,EAAIU,WAAY,KAAK,kBAAehV,EAAAA,cAAA,SAAG,eAAe,KAE3DsU,EAAIgB,UACJtV,EAAAA,cAAA,OAAKC,UAAU,YAAW,yBACFD,EAAAA,cAAA,SAAKsU,EAAIgB,WAGjChB,EAAIiB,UACJvV,EAAAA,cAAA,OAAKC,UAAU,YAAW,aACZqU,EAAIiB,UAGlBjB,EAAI9H,KACJxM,EAAAA,cAAA,OAAKC,UAAU,OAAM,QACdD,EAAAA,cAAA,KAAGgD,KAAMsR,EAAI9H,KAAO8H,EAAI9H,OAInCxM,EAAAA,cAAA,OACEC,UAAU,cACV8U,IAAMT,EAAIa,GACVK,wBAAyB,CAACC,OAAQnB,EAAIG,gBAEpC,6DCzCV,IAbahlB,IAAA,IAAC,SAAEimB,GAAUjmB,EAAA,OACxBuQ,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAACiV,EAAAA,GAAI,CAACC,GAAG,KACPlV,EAAAA,cAAA,UAAI,yBAGN0V,GAEA","sources":["webpack://jobs-board/./node_modules/dompurify/dist/purify.js","webpack://jobs-board/./src/components/Badge.jsx","webpack://jobs-board/./node_modules/marked/lib/marked.esm.js","webpack://jobs-board/./src/jobToMarkdown.js","webpack://jobs-board/./src/components/Job.jsx","webpack://jobs-board/./src/components/Page.jsx"],"sourcesContent":["/*! @license DOMPurify | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.0.8/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.DOMPurify = factory());\n}(this, function () { 'use strict';\n\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen;\n  var freeze = Object.freeze,\n      seal = Object.seal,\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n\n  var regExpTest = unapply(RegExp.prototype.test);\n\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n\n  /* Add properties to a lookup table */\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n    while (l--) {\n      var element = array[l];\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n\n  /* Shallow clone an object */\n  function clone(object) {\n    var newObject = create(null);\n\n    var property = void 0;\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\n\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n  var text = freeze(['#text']);\n\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '2.2.2';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        Text = window.Text,\n        Comment = window.Comment,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        getElementsByTagName = _document.getElementsByTagName,\n        createDocumentFragment = _document.createDocumentFragment;\n    var importNode = originalDocument.importNode;\n\n\n    var documentMode = {};\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n        ERB_EXPR$$1 = ERB_EXPR,\n        DATA_ATTR$$1 = DATA_ATTR,\n        ARIA_ATTR$$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    var SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify.\n     *\n     * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n     * might cause XSS from attacks hidden in closed shadowroots in case the browser\n     * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n     */\n    var RETURN_DOM_IMPORT = true;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    var RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    var IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    var USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, { element: node });\n      try {\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.outerHTML = emptyHTML;\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name);\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /* Use the DOMParser API by default, fallback later if needs be */\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n      } catch (_) {}\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createHTMLDocument('');\n        var _doc = doc,\n            body = _doc.body;\n\n        body.parentNode.removeChild(body.parentNode.firstElementChild);\n        body.outerHTML = dirtyPayload;\n      }\n\n      if (dirty && leadingWhitespace) {\n        doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    };\n\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n        return NodeFilter.FILTER_ACCEPT;\n      }, false);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    var _isClobbered = function _isClobbered(elm) {\n      if (elm instanceof Text || elm instanceof Comment) {\n        return false;\n      }\n\n      if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string') {\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check if tagname contains Unicode */\n      if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      var tagName = stringToLowerCase(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Take care of an mXSS pattern using p, br inside svg, math */\n      if ((tagName === 'svg' || tagName === 'math') && currentNode.querySelectorAll('p, br, form, table').length !== 0) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[!/\\w]/g, currentNode.innerHTML) && regExpTest(/<[!/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n          try {\n            var htmlToInsert = currentNode.innerHTML;\n            currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\n          } catch (_) {}\n        }\n\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove in case a noscript/noembed XSS is suspected */\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        return false;\n\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n\n        value = stringTrim(attr.value);\n        lcName = stringToLowerCase(name);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n\n        /* Is `value` valid for this attribute? */\n        var lcTag = currentNode.nodeName.toLowerCase();\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n      var shadowIterator = _createIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      if (!dirty) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n\n      /* Check we can run. Otherwise fall back or ignore */\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) ; else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : emptyHTML;\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (RETURN_DOM_IMPORT) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = stringToLowerCase(tag);\n      var lcName = stringToLowerCase(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","import React from \"react\";\n\nconst badgeSymbols = {\n  'Sponsor': '🚀',\n  'Pure OSS': '🍏',\n};\n\nconst badgeExplanation = {\n  'Sponsor': 'This entity is a sponsor of NumFOCUS',\n  'Pure OSS': 'This jobs entails working on Open Source full time'\n};\n\nconst Badge = ({ type }) => (\n  <div className=\"badge\">\n    <span role=\"img\" aria-label={type}>\n      { badgeSymbols[type] }\n      <span className=\"tooltip\">\n        { badgeExplanation[type] }\n      </span>\n    </span>\n  </div>\n);\n\nexport default Badge;\n","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { marked } from 'marked';\n\nexport const jobToMarkdown = (job) => {\n  const DOMPurify = (typeof window !== `undefined`) ?\n        require('dompurify') : undefined;\n\n  const sanitize = DOMPurify ? DOMPurify.sanitize : (x, y) => x;\n\n  return {\n    ...job,\n    description: sanitize(\n      marked(job.description),\n      {ALLOWED_TAGS: ['em', 'strong', 'ol', 'ul', 'li', 'br', 'p', 'a']}\n    )\n  };\n};\n\nexport default jobToMarkdown;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Badge from \"./Badge\";\nimport jobToMarkdown from \"../jobToMarkdown.js\";\n\n\nconst Job = ({ job }) => {\n  if (job === undefined) {\n    console.log(\"We don't expect an empty job posting; aborting\");\n    return <div>Empty job posting</div>;\n  }\n\n  job = jobToMarkdown(job);\n  return (\n    <div className=\"job\">\n      <div className=\"badges\">\n        { job.badges &&\n          job.badges.map((badge) =>\n            <Badge key={badge} type={badge}/>\n          )\n        }\n        { (job.percentOSS === 100) &&\n          <Badge type=\"Pure OSS\"/>\n        }\n      </div>\n      <Link to={`/job/${job.id}`}>\n        <div className=\"title\">{ job.entity } / { job.title }</div>\n      </Link>\n      <div className=\"meta\">\n        { job.percentTime &&\n          <div className=\"percentTime\">This job is <b>{ job.percentTime }%</b> time.</div>\n        }\n        <div className=\"percentOSS\">\n          <b>{ job.percentOSS }%</b> of time is on <b>open source</b>.\n        </div>\n        { job.deadline &&\n          <div className=\"deadline\">\n            Application deadline: <b>{ job.deadline }</b>\n          </div>\n        }\n        { job.location &&\n          <div className=\"location\">\n            Location: { job.location }\n          </div>\n        }\n        { job.url &&\n          <div className=\"url\">\n            URL: <a href={job.url}>{ job.url }</a>\n          </div>\n        }\n      </div>\n      <div\n        className=\"description\"\n        key={ job.id }\n        dangerouslySetInnerHTML={{__html: job.description}}\n      />\n    </div>\n  );\n};\nexport default Job;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Page = ({ children }) => (\n  <div className=\"page\">\n    <div className=\"content\">\n      <div className=\"header\">\n        <Link to=\"/\">\n          <h1>NumFOCUS Jobs Board</h1>\n        </Link>\n      </div>\n      { children }\n    </div>\n  </div>\n);\n\nexport default Page;\n"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","hasOwnProperty","Object","setPrototypeOf","isFrozen","freeze","seal","create","_ref","Reflect","apply","construct","fun","thisValue","args","x","Func","Function","prototype","bind","concat","arrayForEach","unapply","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","set","array","l","element","lcElement","clone","object","newObject","property","html","svg","svgFilters","mathMl","text","html$1","svg$1","mathMl$1","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","Symbol","iterator","obj","constructor","_toConsumableArray$1","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","_","console","warn","createDOMPurify","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","RETURN_TRUSTED_TYPE","_document","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","documentMode","hooks","createHTMLDocument","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","_forceRemove","node","parentNode","removeChild","outerHTML","_removeAttribute","name","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","body","firstElementChild","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isClobbered","elm","nodeName","textContent","attributes","setAttribute","namespaceURI","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","tagName","allowedTags","querySelectorAll","innerHTML","insertAdjacentHTML","htmlToInsert","cloneNode","_isValidAttribute","lcTag","lcName","value","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","factory","badgeSymbols","badgeExplanation","type","React","className","role","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","encode","unescapeTest","n","charAt","fromCharCode","parseInt","substring","caret","edit","regex","opt","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","splitCells","tableRow","count","cells","offset","str","escaped","curr","split","shift","splice","c","invert","suffLen","currChar","slice","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","state","inLink","token","tokens","inlineTokens","Tokenizer","options","this","space","src","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","matchIndentInNode","indentInNode","join","indentCodeCompensation","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","item","header","align","rows","j","k","row","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","lex","lexInline","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","listitem","checkbox","tablerow","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","Hooks","static","Set","preprocess","markdown","postprocess","parseMarkdown","callback","origOpt","throwError","message","msg","Promise","resolve","reject","onError","marked","checkSanitizeDeprecation","done","err","pending","setTimeout","then","all","catch","setOptions","newDefaults","use","childTokens","pack","opts","ext","prevRenderer","prop","prevTokenizer","prevHook","passThroughHooks","has","arg","values","job","require","y","description","log","jobToMarkdown","badges","badge","Badge","key","percentOSS","Link","to","id","entity","percentTime","deadline","location","dangerouslySetInnerHTML","__html","children"],"sourceRoot":""}